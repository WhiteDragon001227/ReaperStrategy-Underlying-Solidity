{
  "contractName": "ReaperBaseStrategyv1_1",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newCallFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newTreasuryFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newStrategistFee",
          "type": "uint256"
        }
      ],
      "name": "FeesUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "harvester",
          "type": "address"
        }
      ],
      "name": "StratHarvest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newStrategistRemitter",
          "type": "address"
        }
      ],
      "name": "StrategistRemitterUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newFee",
          "type": "uint256"
        }
      ],
      "name": "TotalFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_FEE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_SECURITY_FEE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ONE_YEAR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PERCENT_DIVISOR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STRATEGIST",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STRATEGIST_MAX_FEE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STRATEGIST_MULTISIG",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "UPGRADE_TIMELOCK",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "callFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "estimateHarvest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "profit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "callFeeToUser",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "harvestLog",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "vaultSharePrice",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "harvestLogCadence",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastHarvestTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "securityFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "strategistFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "strategistRemitter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "treasury",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "treasuryFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "upgradeProposalTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "harvest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "harvestLogLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "_n",
          "type": "int256"
        }
      ],
      "name": "averageAPRAcrossLastNHarvests",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newCadenceInSeconds",
          "type": "uint256"
        }
      ],
      "name": "updateHarvestLogCadence",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "retireStrat",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "panic",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_totalFee",
          "type": "uint256"
        }
      ],
      "name": "updateTotalFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_callFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_treasuryFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_strategistFee",
          "type": "uint256"
        }
      ],
      "name": "updateFees",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_securityFee",
          "type": "uint256"
        }
      ],
      "name": "updateSecurityFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newTreasury",
          "type": "address"
        }
      ],
      "name": "updateTreasury",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newStrategistRemitter",
          "type": "address"
        }
      ],
      "name": "updateStrategistRemitter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_startIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endIndex",
          "type": "uint256"
        }
      ],
      "name": "calculateAPRUsingLogs",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initiateUpgradeCooldown",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "clearUpgradeCooldown",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newCallFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTreasuryFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newStrategistFee\",\"type\":\"uint256\"}],\"name\":\"FeesUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"harvester\",\"type\":\"address\"}],\"name\":\"StratHarvest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newStrategistRemitter\",\"type\":\"address\"}],\"name\":\"StrategistRemitterUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"TotalFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SECURITY_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ONE_YEAR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERCENT_DIVISOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STRATEGIST\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STRATEGIST_MAX_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STRATEGIST_MULTISIG\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_TIMELOCK\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"_n\",\"type\":\"int256\"}],\"name\":\"averageAPRAcrossLastNHarvests\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_startIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endIndex\",\"type\":\"uint256\"}],\"name\":\"calculateAPRUsingLogs\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"callFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearUpgradeCooldown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"estimateHarvest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"profit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"callFeeToUser\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"harvestLog\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultSharePrice\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvestLogCadence\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvestLogLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initiateUpgradeCooldown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastHarvestTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"panic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retireStrat\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"securityFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strategistFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strategistRemitter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_callFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_treasuryFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_strategistFee\",\"type\":\"uint256\"}],\"name\":\"updateFees\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newCadenceInSeconds\",\"type\":\"uint256\"}],\"name\":\"updateHarvestLogCadence\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_securityFee\",\"type\":\"uint256\"}],\"name\":\"updateSecurityFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newStrategistRemitter\",\"type\":\"address\"}],\"name\":\"updateStrategistRemitter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalFee\",\"type\":\"uint256\"}],\"name\":\"updateTotalFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newTreasury\",\"type\":\"address\"}],\"name\":\"updateTreasury\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"upgradeProposalTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"averageAPRAcrossLastNHarvests(int256)\":{\"details\":\"Traverses the harvest log backwards _n items,      and returns the average APR calculated across all the included      log entries. APR is multiplied by PERCENT_DIVISOR to retain precision.\"},\"balanceOf()\":{\"details\":\"Function to calculate the total {want} held by the strat.      It takes into account both the funds in hand, plus the funds in external contracts.\"},\"calculateAPRUsingLogs(uint256,uint256)\":{\"details\":\"Project an APR using the vault share price change between harvests at the provided indices.\"},\"clearUpgradeCooldown()\":{\"details\":\"This function is called:      - in initialize()      - as part of a successful upgrade      - manually by DEFAULT_ADMIN_ROLE to clear the upgrade cooldown.\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"deposit()\":{\"details\":\"Function that puts the funds to work.      It gets called whenever someone deposits in the strategy's vault contract.      Deposits go through only when the strategy is not paused.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"harvest()\":{\"details\":\"harvest() function that takes care of logging. Subcontracts should      override _harvestCore() and implement their specific logic in it.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"initiateUpgradeCooldown()\":{\"details\":\"DEFAULT_ADMIN_ROLE must call this function prior to upgrading the implementation      and wait UPGRADE_TIMELOCK seconds before executing the upgrade.\"},\"panic()\":{\"details\":\"Pauses deposits. Withdraws all funds leaving rewards behind\"},\"pause()\":{\"details\":\"Pauses the strat. Deposits become disabled but users can still      withdraw. Removes allowances of external contracts.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate that the this implementation remains valid after an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"retireStrat()\":{\"details\":\"Function to retire the strategy. Claims all rewards and withdraws      all principal from external contracts, and sends everything back to      the vault. Can only be called by strategist or owner. Note: this is not an emergency withdraw function. For that, see panic().\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"unpause()\":{\"details\":\"Unpauses the strat. Opens up deposits again and invokes deposit().      Reinstates allowances for external contracts.\"},\"updateFees(uint256,uint256,uint256)\":{\"details\":\"updates the call fee, treasury fee, and strategist fee      call Fee + treasury Fee must add up to PERCENT_DIVISOR      strategist fee is expressed as % of the treasury fee and      must be no more than STRATEGIST_MAX_FEE      only owner\"},\"updateHarvestLogCadence(uint256)\":{\"details\":\"Only strategist or owner can edit the log cadence.\"},\"updateStrategistRemitter(address)\":{\"details\":\"Updates the current strategistRemitter.      If there is only one strategist this function may be called by      that strategist. However if there are multiple strategists      this function may only be called by the STRATEGIST_MULTISIG role.\"},\"updateTotalFee(uint256)\":{\"details\":\"updates the total fee, capped at 5%; only owner.\"},\"updateTreasury(address)\":{\"details\":\"only owner can update treasury address.\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"withdraw(uint256)\":{\"details\":\"Withdraws funds and sends them back to the vault. Can only      be called by the vault. _amount must be valid and security fee      is deducted up-front.\"}},\"stateVariables\":{\"totalFee\":{\"details\":\"Distribution of fees earned, expressed as % of the profit from each harvest. {totalFee} - divided by 10,000 to determine the % fee. Set to 4.5% by default and lowered as necessary to provide users with the most competitive APY. {callFee} - Percent of the totalFee reserved for the harvester (1000 = 10% of total fee: 0.45% by default) {treasuryFee} - Percent of the totalFee taken by maintainers of the software (9000 = 90% of total fee: 4.05% by default) {strategistFee} - Percent of the treasuryFee taken by strategist (2500 = 25% of treasury fee: 1.0125% by default) {securityFee} - Fee taxed when a user withdraws funds. Taken to prevent flash deposit/harvest attacks. These funds are redistributed to stakers in the pool.\"},\"treasury\":{\"details\":\"Reaper contracts: {treasury} - Address of the Reaper treasury {vault} - Address of the vault that controls the strategy's funds. {strategistRemitter} - Address where strategist fee is remitted to.\"}},\"version\":1},\"userdoc\":{\"events\":{\"TotalFeeUpdated(uint256)\":{\"notice\":\"{TotalFeeUpdated} Event that is fired each time the total fee is updated. {FeesUpdated} Event that is fired each time callFee+treasuryFee+strategistFee are updated. {StratHarvest} Event that is fired each time the strategy gets harvested. {StrategistRemitterUpdated} Event that is fired each time the strategistRemitter address is updated.\"}},\"kind\":\"user\",\"methods\":{\"MAX_FEE()\":{\"notice\":\"Fee related constants: {MAX_FEE} - Maximum fee allowed by the strategy. Hard-capped at 10%. {STRATEGIST_MAX_FEE} - Maximum strategist fee allowed by the strategy (as % of treasury fee).                        Hard-capped at 50% {MAX_SECURITY_FEE} - Maximum security fee charged on withdrawal to prevent                      flash deposit/harvest attacks.\"},\"STRATEGIST()\":{\"notice\":\"Reaper Roles\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/src/contracts/abstract/ReaperBaseStrategyv1_1.sol\":\"ReaperBaseStrategyv1_1\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0xc2dfd6ba9449f61b6b03b262182faf302f093a8c05dd10792aeecb4ed1663c0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f79816b0fdc0a6f53173238932ef86e2d7089a6e87b6c5c9c27e6d60f3fe809a\",\"dweb:/ipfs/QmTtXQ8sw91q4n4nXZigNWH3YaGqsJjPXyWCgPGDC6s24j\"]},\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x5addc7dca2366b164c9befa35da22e9081c44bf6c4c8dce4269be43516f8916e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://94aa0da913b24beae8db8180c28b894981568c7ed558136401977f115f40bade\",\"dweb:/ipfs/QmYSMnuMzfs5zemQJ8EYkBd42sWxnEv5kAf4EEik91HryE\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0x7acbc538aad6eb4614e26612a8c5c0149bb8808db95e2638d245a8365f63e572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea07bdbf13b16d19ccf8a8f1a361c80bbfb6073e8b1d079b72f7a5f09dc642cd\",\"dweb:/ipfs/QmQh5YhCySYR5RSAEFTt3NaDhq6MCxvSTdFh56874JPxbY\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x315887e846f1e5f8d8fa535a229d318bb9290aaa69485117f1ee8a9a6b3be823\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29dda00da6d269685b555e710e4abf1c3eb6d00c15b888a7880a2f8dd3c4fdc2\",\"dweb:/ipfs/QmSqcjtdECygtT1Gy7uEo42x8542srpgGEeKKHfcnQqXgn\"]},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x7454006cccb737612b00104d2f606d728e2818b778e7e55542f063c614ce46ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ec10894beb0f7537fba35e501fd1c5d35440e8c8f5ced1b8e57722a1d0879a8\",\"dweb:/ipfs/Qmbc3bNmtDewTGSmrPD93Ubp8saAz8xCxsgTjSmpNTqukz\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x6e36e9b4b71de699c2f3f0d4e4d1aa0b35da99a26e8d5b91ef09ba234b4ef270\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abfa467c53a0d60b4d09bf04aa952b1d1d44e5766fcc053aace078d7859b8419\",\"dweb:/ipfs/QmebVTZpyNxYfKYTuLMywzEJTdc1Ca8ME4xm3kR9gQgToG\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x041af89e5e60b74e1203d5a34614c9de379726f52ecb8cf064cab78b9fdcdf9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a8e235e33979e564ee560e5e7c42f3d4c309698eae7b7035aaf65b0ce6253f9\",\"dweb:/ipfs/QmQKdNPLcgR6LLtS9vDRXy8jeD7gCZDTfctXiTwu6HN7M1\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x422c3d27d0d5681cea93acbb0dcb175fa5b461b5b7731da7ff77e51f0f0174c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://feb47206935cf956f60ffd76b8bad047102c7acbf2aab10157a235b7af66fa39\",\"dweb:/ipfs/QmZQ39kpPhCdN9fyZ7BMwnK26tHjiP6QZDeL8tMSPDjxan\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x398d3323c1932a5986bf36be7c57593e121e69d5db5b6574b4ee0d031443de37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b268304e03daf22c349abe3c318bc6a6badd6542d62311716ab401eec745f78\",\"dweb:/ipfs/QmNYy2sc2RoTjDhyT6HAibmeDGqfhDiDpsWRbHFHoGVHLr\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\":{\"keccak256\":\"0x1976ce0aadaa551a0fecab9930a7f4956252fa40594c8d165f682020f0e826c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c6b744907ce0eb5fd4b11eacf22be3b74a6df83c83a6091d10ae44968ed3da8\",\"dweb:/ipfs/QmYoKc3Rb84bifrqPQaZJN21a9vzG7eyyeEeBEdpz2MDBV\"]},\"project:/src/contracts/abstract/ReaperBaseStrategyv1_1.sol\":{\"keccak256\":\"0x51060c597dbbb60d47d828ab9ebcb4a3ce98dd429aa7e2fd3822c2ac2a3b98b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb57671ea2732687f685518c8e898861cfc6ac1ac3f05fdee109c5c7f88219f9\",\"dweb:/ipfs/QmUZ4ePyztjpMNz6ZY1XyWwB5MqDKm7CiuK3ZX9NQiKBzm\"]},\"project:/src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0x4c8631f558bfa22a5766d79a5a831c292ed4c4d24b0b4e139b5479c52d45c645\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a3244d74ced44606c22fca29196ea5d66a8614623c32c101089d34dd5b30a32\",\"dweb:/ipfs/QmfQtu5CWm1KNNen38hsEzX2DMVCftB4z9rvzfiVkD4BPA\"]},\"project:/src/contracts/interfaces/IVault.sol\":{\"keccak256\":\"0x77dc310d24a2e6eea934aac31059122bccb36d98ee81959e68a9ca0e306f6492\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc99afe49e92bf2c5ba0d6df01913b9bb6e018c2f22bad376eb8c55719f42eec\",\"dweb:/ipfs/QmVMdudvfvdbnSEmg46gsnxwYsFrCuw5SG4qhm5hZxdnHA\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../interfaces/IStrategy.sol\";\r\nimport \"../interfaces/IVault.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\";\r\n\r\nabstract contract ReaperBaseStrategyv1_1 is\r\n    IStrategy,\r\n    UUPSUpgradeable,\r\n    AccessControlEnumerableUpgradeable,\r\n    PausableUpgradeable\r\n{\r\n    uint256 public constant PERCENT_DIVISOR = 10_000;\r\n    uint256 public constant ONE_YEAR = 365 days;\r\n    uint256 public constant UPGRADE_TIMELOCK = 48 hours; // minimum 48 hours for RF\r\n\r\n    struct Harvest {\r\n        uint256 timestamp;\r\n        uint256 vaultSharePrice;\r\n    }\r\n\r\n    Harvest[] public harvestLog;\r\n    uint256 public harvestLogCadence;\r\n    uint256 public lastHarvestTimestamp;\r\n\r\n    uint256 public upgradeProposalTime;\r\n\r\n    /**\r\n     * Reaper Roles\r\n     */\r\n    bytes32 public constant STRATEGIST = keccak256(\"STRATEGIST\");\r\n    bytes32 public constant STRATEGIST_MULTISIG = keccak256(\"STRATEGIST_MULTISIG\");\r\n\r\n    /**\r\n     * @dev Reaper contracts:\r\n     * {treasury} - Address of the Reaper treasury\r\n     * {vault} - Address of the vault that controls the strategy's funds.\r\n     * {strategistRemitter} - Address where strategist fee is remitted to.\r\n     */\r\n    address public treasury;\r\n    address public vault;\r\n    address public strategistRemitter;\r\n\r\n    /**\r\n     * Fee related constants:\r\n     * {MAX_FEE} - Maximum fee allowed by the strategy. Hard-capped at 10%.\r\n     * {STRATEGIST_MAX_FEE} - Maximum strategist fee allowed by the strategy (as % of treasury fee).\r\n     *                        Hard-capped at 50%\r\n     * {MAX_SECURITY_FEE} - Maximum security fee charged on withdrawal to prevent\r\n     *                      flash deposit/harvest attacks.\r\n     */\r\n    uint256 public constant MAX_FEE = 1000;\r\n    uint256 public constant STRATEGIST_MAX_FEE = 5000;\r\n    uint256 public constant MAX_SECURITY_FEE = 10;\r\n\r\n    /**\r\n     * @dev Distribution of fees earned, expressed as % of the profit from each harvest.\r\n     * {totalFee} - divided by 10,000 to determine the % fee. Set to 4.5% by default and\r\n     * lowered as necessary to provide users with the most competitive APY.\r\n     *\r\n     * {callFee} - Percent of the totalFee reserved for the harvester (1000 = 10% of total fee: 0.45% by default)\r\n     * {treasuryFee} - Percent of the totalFee taken by maintainers of the software (9000 = 90% of total fee: 4.05% by default)\r\n     * {strategistFee} - Percent of the treasuryFee taken by strategist (2500 = 25% of treasury fee: 1.0125% by default)\r\n     *\r\n     * {securityFee} - Fee taxed when a user withdraws funds. Taken to prevent flash deposit/harvest attacks.\r\n     * These funds are redistributed to stakers in the pool.\r\n     */\r\n    uint256 public totalFee;\r\n    uint256 public callFee;\r\n    uint256 public treasuryFee;\r\n    uint256 public strategistFee;\r\n    uint256 public securityFee;\r\n\r\n    /**\r\n     * {TotalFeeUpdated} Event that is fired each time the total fee is updated.\r\n     * {FeesUpdated} Event that is fired each time callFee+treasuryFee+strategistFee are updated.\r\n     * {StratHarvest} Event that is fired each time the strategy gets harvested.\r\n     * {StrategistRemitterUpdated} Event that is fired each time the strategistRemitter address is updated.\r\n     */\r\n    event TotalFeeUpdated(uint256 newFee);\r\n    event FeesUpdated(uint256 newCallFee, uint256 newTreasuryFee, uint256 newStrategistFee);\r\n    event StratHarvest(address indexed harvester);\r\n    event StrategistRemitterUpdated(address newStrategistRemitter);\r\n\r\n    /// @custom:oz-upgrades-unsafe-allow constructor\r\n    constructor() initializer {}\r\n\r\n    function __ReaperBaseStrategy_init(\r\n        address _vault,\r\n        address[] memory _feeRemitters,\r\n        address[] memory _strategists\r\n    ) internal onlyInitializing {\r\n        __UUPSUpgradeable_init();\r\n        __AccessControlEnumerable_init();\r\n        __Pausable_init_unchained();\r\n\r\n        harvestLogCadence = 1 minutes;\r\n        totalFee = 450;\r\n        callFee = 1000;\r\n        treasuryFee = 9000;\r\n        strategistFee = 2500;\r\n        securityFee = 10;\r\n\r\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\r\n        clearUpgradeCooldown();\r\n\r\n        vault = _vault;\r\n        treasury = _feeRemitters[0];\r\n        strategistRemitter = _feeRemitters[1];\r\n\r\n        for (uint256 i = 0; i < _strategists.length; i++) {\r\n            _grantRole(STRATEGIST, _strategists[i]);\r\n        }\r\n\r\n        harvestLog.push(Harvest({timestamp: block.timestamp, vaultSharePrice: IVault(_vault).getPricePerFullShare()}));\r\n    }\r\n\r\n    /**\r\n     * @dev Function that puts the funds to work.\r\n     *      It gets called whenever someone deposits in the strategy's vault contract.\r\n     *      Deposits go through only when the strategy is not paused.\r\n     */\r\n    function deposit() public override whenNotPaused {\r\n        _deposit();\r\n    }\r\n\r\n    /**\r\n     * @dev Withdraws funds and sends them back to the vault. Can only\r\n     *      be called by the vault. _amount must be valid and security fee\r\n     *      is deducted up-front.\r\n     */\r\n    function withdraw(uint256 _amount) external override {\r\n        require(msg.sender == vault, \"!vault\");\r\n        require(_amount != 0, \"invalid amount\");\r\n        require(_amount <= balanceOf(), \"invalid amount\");\r\n\r\n        uint256 withdrawFee = (_amount * securityFee) / PERCENT_DIVISOR;\r\n        _amount -= withdrawFee;\r\n\r\n        _withdraw(_amount);\r\n    }\r\n\r\n    /**\r\n     * @dev harvest() function that takes care of logging. Subcontracts should\r\n     *      override _harvestCore() and implement their specific logic in it.\r\n     */\r\n    function harvest() external override whenNotPaused {\r\n        _harvestCore();\r\n\r\n        if (block.timestamp >= harvestLog[harvestLog.length - 1].timestamp + harvestLogCadence) {\r\n            harvestLog.push(\r\n                Harvest({timestamp: block.timestamp, vaultSharePrice: IVault(vault).getPricePerFullShare()})\r\n            );\r\n        }\r\n\r\n        lastHarvestTimestamp = block.timestamp;\r\n        emit StratHarvest(msg.sender);\r\n    }\r\n\r\n    function harvestLogLength() external view returns (uint256) {\r\n        return harvestLog.length;\r\n    }\r\n\r\n    /**\r\n     * @dev Traverses the harvest log backwards _n items,\r\n     *      and returns the average APR calculated across all the included\r\n     *      log entries. APR is multiplied by PERCENT_DIVISOR to retain precision.\r\n     */\r\n    function averageAPRAcrossLastNHarvests(int256 _n) external view returns (int256) {\r\n        require(harvestLog.length >= 2, \"need at least 2 log entries\");\r\n\r\n        int256 runningAPRSum;\r\n        int256 numLogsProcessed;\r\n\r\n        for (uint256 i = harvestLog.length - 1; i > 0 && numLogsProcessed < _n; i--) {\r\n            runningAPRSum += calculateAPRUsingLogs(i - 1, i);\r\n            numLogsProcessed++;\r\n        }\r\n\r\n        return runningAPRSum / numLogsProcessed;\r\n    }\r\n\r\n    /**\r\n     * @dev Only strategist or owner can edit the log cadence.\r\n     */\r\n    function updateHarvestLogCadence(uint256 _newCadenceInSeconds) external {\r\n        _onlyStrategistOrOwner();\r\n        harvestLogCadence = _newCadenceInSeconds;\r\n    }\r\n\r\n    /**\r\n     * @dev Function to calculate the total {want} held by the strat.\r\n     *      It takes into account both the funds in hand, plus the funds in external contracts.\r\n     */\r\n    function balanceOf() public view virtual override returns (uint256);\r\n\r\n    /**\r\n     * @dev Function to retire the strategy. Claims all rewards and withdraws\r\n     *      all principal from external contracts, and sends everything back to\r\n     *      the vault. Can only be called by strategist or owner.\r\n     *\r\n     * Note: this is not an emergency withdraw function. For that, see panic().\r\n     */\r\n    function retireStrat() external override {\r\n        _onlyStrategistOrOwner();\r\n        _retireStrat();\r\n    }\r\n\r\n    /**\r\n     * @dev Pauses deposits. Withdraws all funds leaving rewards behind\r\n     */\r\n    function panic() external override {\r\n        _onlyStrategistOrOwner();\r\n        _reclaimWant();\r\n        pause();\r\n    }\r\n\r\n    /**\r\n     * @dev Pauses the strat. Deposits become disabled but users can still\r\n     *      withdraw. Removes allowances of external contracts.\r\n     */\r\n    function pause() public override {\r\n        _onlyStrategistOrOwner();\r\n        _pause();\r\n        _removeAllowances();\r\n    }\r\n\r\n    /**\r\n     * @dev Unpauses the strat. Opens up deposits again and invokes deposit().\r\n     *      Reinstates allowances for external contracts.\r\n     */\r\n    function unpause() external override {\r\n        _onlyStrategistOrOwner();\r\n        _unpause();\r\n        _giveAllowances();\r\n        deposit();\r\n    }\r\n\r\n    /**\r\n     * @dev updates the total fee, capped at 5%; only owner.\r\n     */\r\n    function updateTotalFee(uint256 _totalFee) external onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        require(_totalFee <= MAX_FEE, \"Fee Too High\");\r\n        totalFee = _totalFee;\r\n        emit TotalFeeUpdated(totalFee);\r\n    }\r\n\r\n    /**\r\n     * @dev updates the call fee, treasury fee, and strategist fee\r\n     *      call Fee + treasury Fee must add up to PERCENT_DIVISOR\r\n     *\r\n     *      strategist fee is expressed as % of the treasury fee and\r\n     *      must be no more than STRATEGIST_MAX_FEE\r\n     *\r\n     *      only owner\r\n     */\r\n    function updateFees(\r\n        uint256 _callFee,\r\n        uint256 _treasuryFee,\r\n        uint256 _strategistFee\r\n    ) external onlyRole(DEFAULT_ADMIN_ROLE) returns (bool) {\r\n        require(_callFee + _treasuryFee == PERCENT_DIVISOR, \"sum != PERCENT_DIVISOR\");\r\n        require(_strategistFee <= STRATEGIST_MAX_FEE, \"strategist fee > STRATEGIST_MAX_FEE\");\r\n\r\n        callFee = _callFee;\r\n        treasuryFee = _treasuryFee;\r\n        strategistFee = _strategistFee;\r\n        emit FeesUpdated(callFee, treasuryFee, strategistFee);\r\n        return true;\r\n    }\r\n\r\n    function updateSecurityFee(uint256 _securityFee) external onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        require(_securityFee <= MAX_SECURITY_FEE, \"fee to high!\");\r\n        securityFee = _securityFee;\r\n    }\r\n\r\n    /**\r\n     * @dev only owner can update treasury address.\r\n     */\r\n    function updateTreasury(address newTreasury) external onlyRole(DEFAULT_ADMIN_ROLE) returns (bool) {\r\n        treasury = newTreasury;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Updates the current strategistRemitter.\r\n     *      If there is only one strategist this function may be called by\r\n     *      that strategist. However if there are multiple strategists\r\n     *      this function may only be called by the STRATEGIST_MULTISIG role.\r\n     */\r\n    function updateStrategistRemitter(address _newStrategistRemitter) external {\r\n        if (getRoleMemberCount(STRATEGIST) == 1) {\r\n            _checkRole(STRATEGIST, msg.sender);\r\n        } else {\r\n            _checkRole(STRATEGIST_MULTISIG, msg.sender);\r\n        }\r\n\r\n        require(_newStrategistRemitter != address(0), \"!0\");\r\n        strategistRemitter = _newStrategistRemitter;\r\n        emit StrategistRemitterUpdated(_newStrategistRemitter);\r\n    }\r\n\r\n    /**\r\n     * @dev Only allow access to strategist or owner\r\n     */\r\n    function _onlyStrategistOrOwner() internal view {\r\n        require(hasRole(STRATEGIST, msg.sender) || hasRole(DEFAULT_ADMIN_ROLE, msg.sender), \"Not authorized\");\r\n    }\r\n\r\n    /**\r\n     * @dev Project an APR using the vault share price change between harvests at the provided indices.\r\n     */\r\n    function calculateAPRUsingLogs(uint256 _startIndex, uint256 _endIndex) public view returns (int256) {\r\n        Harvest storage start = harvestLog[_startIndex];\r\n        Harvest storage end = harvestLog[_endIndex];\r\n        bool increasing = true;\r\n        if (end.vaultSharePrice < start.vaultSharePrice) {\r\n            increasing = false;\r\n        }\r\n\r\n        uint256 unsignedSharePriceChange;\r\n        if (increasing) {\r\n            unsignedSharePriceChange = end.vaultSharePrice - start.vaultSharePrice;\r\n        } else {\r\n            unsignedSharePriceChange = start.vaultSharePrice - end.vaultSharePrice;\r\n        }\r\n\r\n        uint256 unsignedPercentageChange = (unsignedSharePriceChange * 1e18) / start.vaultSharePrice;\r\n        uint256 timeDifference = end.timestamp - start.timestamp;\r\n\r\n        uint256 yearlyUnsignedPercentageChange = (unsignedPercentageChange * ONE_YEAR) / timeDifference;\r\n        yearlyUnsignedPercentageChange /= 1e14; // restore basis points precision\r\n\r\n        if (increasing) {\r\n            return int256(yearlyUnsignedPercentageChange);\r\n        }\r\n\r\n        return -int256(yearlyUnsignedPercentageChange);\r\n    }\r\n\r\n    /**\r\n     * @dev DEFAULT_ADMIN_ROLE must call this function prior to upgrading the implementation\r\n     *      and wait UPGRADE_TIMELOCK seconds before executing the upgrade.\r\n     */\r\n    function initiateUpgradeCooldown() external onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        upgradeProposalTime = block.timestamp;\r\n    }\r\n\r\n    /**\r\n     * @dev This function is called:\r\n     *      - in initialize()\r\n     *      - as part of a successful upgrade\r\n     *      - manually by DEFAULT_ADMIN_ROLE to clear the upgrade cooldown.\r\n     */\r\n    function clearUpgradeCooldown() public onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        upgradeProposalTime = block.timestamp + (ONE_YEAR * 100);\r\n    }\r\n\r\n    /**\r\n     * @dev This function must be overriden simply for access control purposes.\r\n     *      Only DEFAULT_ADMIN_ROLE can upgrade the implementation once the timelock\r\n     *      has passed.\r\n     */\r\n    function _authorizeUpgrade(address) internal override onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        require(upgradeProposalTime + UPGRADE_TIMELOCK < block.timestamp, \"cooldown not initiated or still active\");\r\n        clearUpgradeCooldown();\r\n    }\r\n\r\n    /**\r\n     * @dev subclasses should add their custom deposit logic in this function.\r\n     */\r\n    function _deposit() internal virtual;\r\n\r\n    /**\r\n     * @dev subclasses should add their custom withdraw logic in this function.\r\n     *      Note that security fee has already been deducted, so it shouldn't be deducted\r\n     *      again within this function.\r\n     */\r\n    function _withdraw(uint256 _amount) internal virtual;\r\n\r\n    /**\r\n     * @dev subclasses should add their custom harvesting logic in this function\r\n     *      including charging any fees.\r\n     */\r\n    function _harvestCore() internal virtual;\r\n\r\n    /**\r\n     * @dev subclasses should add their custom logic to retire the strategy in this function.\r\n     *      Note that we expect all funds (including any pending rewards) to be sent back to\r\n     *      the vault in this function.\r\n     */\r\n    function _retireStrat() internal virtual;\r\n\r\n    /**\r\n     * @dev subclasses should add their custom logic to withdraw the principal from\r\n     *      any external contracts in this function. Note that we don't care about rewards,\r\n     *      we just want to reclaim our principal as much as possible, and as quickly as possible.\r\n     *      So keep this function lean. Principal should be left in the strategy and not sent to\r\n     *      the vault.\r\n     */\r\n    function _reclaimWant() internal virtual;\r\n\r\n    /**\r\n     * @dev subclasses should add their custom logic to give allowances to external contracts\r\n     *      so the strategy can successfully interface with them.\r\n     */\r\n    function _giveAllowances() internal virtual;\r\n\r\n    /**\r\n     * @dev subclasses should add their custom logic to remove all allowances for any external\r\n     *      contracts.\r\n     */\r\n    function _removeAllowances() internal virtual;\r\n}",
  "sourcePath": "E:\\2.Dev\\2\\fantohm\\2.Progress\\3.DefiYieldFarming\\marketplace\\src\\contracts\\abstract\\ReaperBaseStrategyv1_1.sol",
  "ast": {
    "absolutePath": "project:/src/contracts/abstract/ReaperBaseStrategyv1_1.sol",
    "exportedSymbols": {
      "AccessControlEnumerableUpgradeable": [
        144
      ],
      "AccessControlUpgradeable": [
        484
      ],
      "AddressUpgradeable": [
        2541
      ],
      "ContextUpgradeable": [
        2583
      ],
      "ERC165Upgradeable": [
        2890
      ],
      "ERC1967UpgradeUpgradeable": [
        961
      ],
      "EnumerableSetUpgradeable": [
        3589
      ],
      "IAccessControlEnumerableUpgradeable": [
        509
      ],
      "IAccessControlUpgradeable": [
        582
      ],
      "IBeaconUpgradeable": [
        971
      ],
      "IERC165Upgradeable": [
        2902
      ],
      "IERC1822ProxiableUpgradeable": [
        592
      ],
      "IStrategy": [
        6572
      ],
      "IVault": [
        6994
      ],
      "Initializable": [
        1113
      ],
      "PausableUpgradeable": [
        1360
      ],
      "ReaperBaseStrategyv1_1": [
        5640
      ],
      "StorageSlotUpgradeable": [
        2643
      ],
      "StringsUpgradeable": [
        2846
      ],
      "UUPSUpgradeable": [
        1249
      ]
    },
    "id": 5641,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4799,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:24"
      },
      {
        "absolutePath": "project:/src/contracts/interfaces/IStrategy.sol",
        "file": "../interfaces/IStrategy.sol",
        "id": 4800,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5641,
        "sourceUnit": 6573,
        "src": "62:37:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/src/contracts/interfaces/IVault.sol",
        "file": "../interfaces/IVault.sol",
        "id": 4801,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5641,
        "sourceUnit": 6995,
        "src": "101:34:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol",
        "id": 4802,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5641,
        "sourceUnit": 145,
        "src": "137:91:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "id": 4803,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5641,
        "sourceUnit": 1114,
        "src": "230:75:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
        "id": 4804,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5641,
        "sourceUnit": 1250,
        "src": "307:77:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
        "id": 4805,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5641,
        "sourceUnit": 1361,
        "src": "386:78:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 4806,
              "name": "IStrategy",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6572,
              "src": "517:9:24"
            },
            "id": 4807,
            "nodeType": "InheritanceSpecifier",
            "src": "517:9:24"
          },
          {
            "baseName": {
              "id": 4808,
              "name": "UUPSUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1249,
              "src": "533:15:24"
            },
            "id": 4809,
            "nodeType": "InheritanceSpecifier",
            "src": "533:15:24"
          },
          {
            "baseName": {
              "id": 4810,
              "name": "AccessControlEnumerableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 144,
              "src": "555:34:24"
            },
            "id": 4811,
            "nodeType": "InheritanceSpecifier",
            "src": "555:34:24"
          },
          {
            "baseName": {
              "id": 4812,
              "name": "PausableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1360,
              "src": "596:19:24"
            },
            "id": 4813,
            "nodeType": "InheritanceSpecifier",
            "src": "596:19:24"
          }
        ],
        "canonicalName": "ReaperBaseStrategyv1_1",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": false,
        "id": 5640,
        "linearizedBaseContracts": [
          5640,
          1360,
          144,
          484,
          2890,
          2902,
          509,
          582,
          2583,
          1249,
          961,
          592,
          1113,
          6572
        ],
        "name": "ReaperBaseStrategyv1_1",
        "nameLocation": "486:22:24",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "4870dd9a",
            "id": 4816,
            "mutability": "constant",
            "name": "PERCENT_DIVISOR",
            "nameLocation": "648:15:24",
            "nodeType": "VariableDeclaration",
            "scope": 5640,
            "src": "624:48:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4814,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "624:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31305f303030",
              "id": 4815,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "666:6:24",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10_000"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "16d3bfbb",
            "id": 4819,
            "mutability": "constant",
            "name": "ONE_YEAR",
            "nameLocation": "703:8:24",
            "nodeType": "VariableDeclaration",
            "scope": 5640,
            "src": "679:43:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4817,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "679:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "333635",
              "id": 4818,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "714:8:24",
              "subdenomination": "days",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_31536000_by_1",
                "typeString": "int_const 31536000"
              },
              "value": "365"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "25ed32ca",
            "id": 4822,
            "mutability": "constant",
            "name": "UPGRADE_TIMELOCK",
            "nameLocation": "753:16:24",
            "nodeType": "VariableDeclaration",
            "scope": 5640,
            "src": "729:51:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4820,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "729:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3438",
              "id": 4821,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "772:8:24",
              "subdenomination": "hours",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_172800_by_1",
                "typeString": "int_const 172800"
              },
              "value": "48"
            },
            "visibility": "public"
          },
          {
            "canonicalName": "ReaperBaseStrategyv1_1.Harvest",
            "id": 4827,
            "members": [
              {
                "constant": false,
                "id": 4824,
                "mutability": "mutable",
                "name": "timestamp",
                "nameLocation": "850:9:24",
                "nodeType": "VariableDeclaration",
                "scope": 4827,
                "src": "842:17:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4823,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "842:7:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4826,
                "mutability": "mutable",
                "name": "vaultSharePrice",
                "nameLocation": "878:15:24",
                "nodeType": "VariableDeclaration",
                "scope": 4827,
                "src": "870:23:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4825,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "870:7:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Harvest",
            "nameLocation": "823:7:24",
            "nodeType": "StructDefinition",
            "scope": 5640,
            "src": "816:85:24",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f37ae328",
            "id": 4831,
            "mutability": "mutable",
            "name": "harvestLog",
            "nameLocation": "926:10:24",
            "nodeType": "VariableDeclaration",
            "scope": 5640,
            "src": "909:27:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Harvest_$4827_storage_$dyn_storage",
              "typeString": "struct ReaperBaseStrategyv1_1.Harvest[]"
            },
            "typeName": {
              "baseType": {
                "id": 4829,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 4828,
                  "name": "Harvest",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4827,
                  "src": "909:7:24"
                },
                "referencedDeclaration": 4827,
                "src": "909:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Harvest_$4827_storage_ptr",
                  "typeString": "struct ReaperBaseStrategyv1_1.Harvest"
                }
              },
              "id": 4830,
              "nodeType": "ArrayTypeName",
              "src": "909:9:24",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Harvest_$4827_storage_$dyn_storage_ptr",
                "typeString": "struct ReaperBaseStrategyv1_1.Harvest[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "72c95e56",
            "id": 4833,
            "mutability": "mutable",
            "name": "harvestLogCadence",
            "nameLocation": "958:17:24",
            "nodeType": "VariableDeclaration",
            "scope": 5640,
            "src": "943:32:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4832,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "943:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2257a738",
            "id": 4835,
            "mutability": "mutable",
            "name": "lastHarvestTimestamp",
            "nameLocation": "997:20:24",
            "nodeType": "VariableDeclaration",
            "scope": 5640,
            "src": "982:35:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4834,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "982:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "651eebfe",
            "id": 4837,
            "mutability": "mutable",
            "name": "upgradeProposalTime",
            "nameLocation": "1041:19:24",
            "nodeType": "VariableDeclaration",
            "scope": 5640,
            "src": "1026:34:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4836,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1026:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 4838,
              "nodeType": "StructuredDocumentation",
              "src": "1069:33:24",
              "text": " Reaper Roles"
            },
            "functionSelector": "9cfdede3",
            "id": 4843,
            "mutability": "constant",
            "name": "STRATEGIST",
            "nameLocation": "1132:10:24",
            "nodeType": "VariableDeclaration",
            "scope": 5640,
            "src": "1108:60:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 4839,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1108:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "53545241544547495354",
                  "id": 4841,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1155:12:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_b17d0a42cc710456bf9c3efb785dcd0cb93a0ac358113307b5c64b285b516b5c",
                    "typeString": "literal_string \"STRATEGIST\""
                  },
                  "value": "STRATEGIST"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_b17d0a42cc710456bf9c3efb785dcd0cb93a0ac358113307b5c64b285b516b5c",
                    "typeString": "literal_string \"STRATEGIST\""
                  }
                ],
                "id": 4840,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "1145:9:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 4842,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1145:23:24",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "b54effcc",
            "id": 4848,
            "mutability": "constant",
            "name": "STRATEGIST_MULTISIG",
            "nameLocation": "1199:19:24",
            "nodeType": "VariableDeclaration",
            "scope": 5640,
            "src": "1175:78:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 4844,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1175:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "535452415445474953545f4d554c5449534947",
                  "id": 4846,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1231:21:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_a948adc7068532b3bc0cbefb673a9d9c287bc35ef1f8a3a71353d54d7149def7",
                    "typeString": "literal_string \"STRATEGIST_MULTISIG\""
                  },
                  "value": "STRATEGIST_MULTISIG"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_a948adc7068532b3bc0cbefb673a9d9c287bc35ef1f8a3a71353d54d7149def7",
                    "typeString": "literal_string \"STRATEGIST_MULTISIG\""
                  }
                ],
                "id": 4845,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "1221:9:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 4847,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1221:32:24",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4849,
              "nodeType": "StructuredDocumentation",
              "src": "1262:246:24",
              "text": " @dev Reaper contracts:\n {treasury} - Address of the Reaper treasury\n {vault} - Address of the vault that controls the strategy's funds.\n {strategistRemitter} - Address where strategist fee is remitted to."
            },
            "functionSelector": "61d027b3",
            "id": 4851,
            "mutability": "mutable",
            "name": "treasury",
            "nameLocation": "1529:8:24",
            "nodeType": "VariableDeclaration",
            "scope": 5640,
            "src": "1514:23:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4850,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1514:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fbfa77cf",
            "id": 4853,
            "mutability": "mutable",
            "name": "vault",
            "nameLocation": "1559:5:24",
            "nodeType": "VariableDeclaration",
            "scope": 5640,
            "src": "1544:20:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4852,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1544:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8888f9f6",
            "id": 4855,
            "mutability": "mutable",
            "name": "strategistRemitter",
            "nameLocation": "1586:18:24",
            "nodeType": "VariableDeclaration",
            "scope": 5640,
            "src": "1571:33:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4854,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1571:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 4856,
              "nodeType": "StructuredDocumentation",
              "src": "1613:415:24",
              "text": " Fee related constants:\n {MAX_FEE} - Maximum fee allowed by the strategy. Hard-capped at 10%.\n {STRATEGIST_MAX_FEE} - Maximum strategist fee allowed by the strategy (as % of treasury fee).\n                        Hard-capped at 50%\n {MAX_SECURITY_FEE} - Maximum security fee charged on withdrawal to prevent\n                      flash deposit/harvest attacks."
            },
            "functionSelector": "bc063e1a",
            "id": 4859,
            "mutability": "constant",
            "name": "MAX_FEE",
            "nameLocation": "2058:7:24",
            "nodeType": "VariableDeclaration",
            "scope": 5640,
            "src": "2034:38:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4857,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2034:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31303030",
              "id": 4858,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2068:4:24",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000_by_1",
                "typeString": "int_const 1000"
              },
              "value": "1000"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "ecf173ff",
            "id": 4862,
            "mutability": "constant",
            "name": "STRATEGIST_MAX_FEE",
            "nameLocation": "2103:18:24",
            "nodeType": "VariableDeclaration",
            "scope": 5640,
            "src": "2079:49:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4860,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2079:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "35303030",
              "id": 4861,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2124:4:24",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5000_by_1",
                "typeString": "int_const 5000"
              },
              "value": "5000"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "13c6c475",
            "id": 4865,
            "mutability": "constant",
            "name": "MAX_SECURITY_FEE",
            "nameLocation": "2159:16:24",
            "nodeType": "VariableDeclaration",
            "scope": 5640,
            "src": "2135:45:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4863,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2135:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130",
              "id": 4864,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2178:2:24",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4866,
              "nodeType": "StructuredDocumentation",
              "src": "2189:824:24",
              "text": " @dev Distribution of fees earned, expressed as % of the profit from each harvest.\n {totalFee} - divided by 10,000 to determine the % fee. Set to 4.5% by default and\n lowered as necessary to provide users with the most competitive APY.\n {callFee} - Percent of the totalFee reserved for the harvester (1000 = 10% of total fee: 0.45% by default)\n {treasuryFee} - Percent of the totalFee taken by maintainers of the software (9000 = 90% of total fee: 4.05% by default)\n {strategistFee} - Percent of the treasuryFee taken by strategist (2500 = 25% of treasury fee: 1.0125% by default)\n {securityFee} - Fee taxed when a user withdraws funds. Taken to prevent flash deposit/harvest attacks.\n These funds are redistributed to stakers in the pool."
            },
            "functionSelector": "1df4ccfc",
            "id": 4868,
            "mutability": "mutable",
            "name": "totalFee",
            "nameLocation": "3034:8:24",
            "nodeType": "VariableDeclaration",
            "scope": 5640,
            "src": "3019:23:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4867,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3019:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "90321e1a",
            "id": 4870,
            "mutability": "mutable",
            "name": "callFee",
            "nameLocation": "3064:7:24",
            "nodeType": "VariableDeclaration",
            "scope": 5640,
            "src": "3049:22:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4869,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3049:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cc32d176",
            "id": 4872,
            "mutability": "mutable",
            "name": "treasuryFee",
            "nameLocation": "3093:11:24",
            "nodeType": "VariableDeclaration",
            "scope": 5640,
            "src": "3078:26:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4871,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3078:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "526e1080",
            "id": 4874,
            "mutability": "mutable",
            "name": "strategistFee",
            "nameLocation": "3126:13:24",
            "nodeType": "VariableDeclaration",
            "scope": 5640,
            "src": "3111:28:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4873,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3111:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d68e1302",
            "id": 4876,
            "mutability": "mutable",
            "name": "securityFee",
            "nameLocation": "3161:11:24",
            "nodeType": "VariableDeclaration",
            "scope": 5640,
            "src": "3146:26:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4875,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3146:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 4877,
              "nodeType": "StructuredDocumentation",
              "src": "3181:384:24",
              "text": " {TotalFeeUpdated} Event that is fired each time the total fee is updated.\n {FeesUpdated} Event that is fired each time callFee+treasuryFee+strategistFee are updated.\n {StratHarvest} Event that is fired each time the strategy gets harvested.\n {StrategistRemitterUpdated} Event that is fired each time the strategistRemitter address is updated."
            },
            "id": 4881,
            "name": "TotalFeeUpdated",
            "nameLocation": "3577:15:24",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4879,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newFee",
                  "nameLocation": "3601:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4881,
                  "src": "3593:14:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4878,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3593:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3592:16:24"
            },
            "src": "3571:38:24"
          },
          {
            "anonymous": false,
            "id": 4889,
            "name": "FeesUpdated",
            "nameLocation": "3621:11:24",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4888,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4883,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newCallFee",
                  "nameLocation": "3641:10:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4889,
                  "src": "3633:18:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4882,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3633:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4885,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newTreasuryFee",
                  "nameLocation": "3661:14:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4889,
                  "src": "3653:22:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4884,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3653:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4887,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newStrategistFee",
                  "nameLocation": "3685:16:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4889,
                  "src": "3677:24:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4886,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3677:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3632:70:24"
            },
            "src": "3615:88:24"
          },
          {
            "anonymous": false,
            "id": 4893,
            "name": "StratHarvest",
            "nameLocation": "3715:12:24",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4892,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4891,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "harvester",
                  "nameLocation": "3744:9:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4893,
                  "src": "3728:25:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4890,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3728:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3727:27:24"
            },
            "src": "3709:46:24"
          },
          {
            "anonymous": false,
            "id": 4897,
            "name": "StrategistRemitterUpdated",
            "nameLocation": "3767:25:24",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4896,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4895,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newStrategistRemitter",
                  "nameLocation": "3801:21:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4897,
                  "src": "3793:29:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4894,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3793:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3792:31:24"
            },
            "src": "3761:63:24"
          },
          {
            "body": {
              "id": 4903,
              "nodeType": "Block",
              "src": "3912:2:24",
              "statements": []
            },
            "documentation": {
              "id": 4898,
              "nodeType": "StructuredDocumentation",
              "src": "3832:48:24",
              "text": "@custom:oz-upgrades-unsafe-allow constructor"
            },
            "id": 4904,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "id": 4901,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4900,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1015,
                  "src": "3900:11:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "3900:11:24"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4899,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3897:2:24"
            },
            "returnParameters": {
              "id": 4902,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3912:0:24"
            },
            "scope": 5640,
            "src": "3886:28:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5009,
              "nodeType": "Block",
              "src": "4096:755:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4917,
                      "name": "__UUPSUpgradeable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1131,
                      "src": "4107:22:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 4918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4107:24:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4919,
                  "nodeType": "ExpressionStatement",
                  "src": "4107:24:24"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4920,
                      "name": "__AccessControlEnumerable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "4142:30:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 4921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4142:32:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4922,
                  "nodeType": "ExpressionStatement",
                  "src": "4142:32:24"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4923,
                      "name": "__Pausable_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1290,
                      "src": "4185:25:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 4924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4185:27:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4925,
                  "nodeType": "ExpressionStatement",
                  "src": "4185:27:24"
                },
                {
                  "expression": {
                    "id": 4928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4926,
                      "name": "harvestLogCadence",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4833,
                      "src": "4225:17:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 4927,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4245:9:24",
                      "subdenomination": "minutes",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_60_by_1",
                        "typeString": "int_const 60"
                      },
                      "value": "1"
                    },
                    "src": "4225:29:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4929,
                  "nodeType": "ExpressionStatement",
                  "src": "4225:29:24"
                },
                {
                  "expression": {
                    "id": 4932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4930,
                      "name": "totalFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4868,
                      "src": "4265:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "343530",
                      "id": 4931,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4276:3:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_450_by_1",
                        "typeString": "int_const 450"
                      },
                      "value": "450"
                    },
                    "src": "4265:14:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4933,
                  "nodeType": "ExpressionStatement",
                  "src": "4265:14:24"
                },
                {
                  "expression": {
                    "id": 4936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4934,
                      "name": "callFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4870,
                      "src": "4290:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31303030",
                      "id": 4935,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4300:4:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000_by_1",
                        "typeString": "int_const 1000"
                      },
                      "value": "1000"
                    },
                    "src": "4290:14:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4937,
                  "nodeType": "ExpressionStatement",
                  "src": "4290:14:24"
                },
                {
                  "expression": {
                    "id": 4940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4938,
                      "name": "treasuryFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4872,
                      "src": "4315:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "39303030",
                      "id": 4939,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4329:4:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_9000_by_1",
                        "typeString": "int_const 9000"
                      },
                      "value": "9000"
                    },
                    "src": "4315:18:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4941,
                  "nodeType": "ExpressionStatement",
                  "src": "4315:18:24"
                },
                {
                  "expression": {
                    "id": 4944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4942,
                      "name": "strategistFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4874,
                      "src": "4344:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "32353030",
                      "id": 4943,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4360:4:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2500_by_1",
                        "typeString": "int_const 2500"
                      },
                      "value": "2500"
                    },
                    "src": "4344:20:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4945,
                  "nodeType": "ExpressionStatement",
                  "src": "4344:20:24"
                },
                {
                  "expression": {
                    "id": 4948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4946,
                      "name": "securityFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4876,
                      "src": "4375:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3130",
                      "id": 4947,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4389:2:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "4375:16:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4949,
                  "nodeType": "ExpressionStatement",
                  "src": "4375:16:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4951,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 187,
                        "src": "4415:18:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 4952,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4435:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4435:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4950,
                      "name": "_grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        114
                      ],
                      "referencedDeclaration": 114,
                      "src": "4404:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 4954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4404:42:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4955,
                  "nodeType": "ExpressionStatement",
                  "src": "4404:42:24"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4956,
                      "name": "clearUpgradeCooldown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5585,
                      "src": "4457:20:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 4957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4457:22:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4958,
                  "nodeType": "ExpressionStatement",
                  "src": "4457:22:24"
                },
                {
                  "expression": {
                    "id": 4961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4959,
                      "name": "vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4853,
                      "src": "4492:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4960,
                      "name": "_vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4906,
                      "src": "4500:6:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4492:14:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4962,
                  "nodeType": "ExpressionStatement",
                  "src": "4492:14:24"
                },
                {
                  "expression": {
                    "id": 4967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4963,
                      "name": "treasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4851,
                      "src": "4517:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 4964,
                        "name": "_feeRemitters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4909,
                        "src": "4528:13:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 4966,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 4965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4542:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4528:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4517:27:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4968,
                  "nodeType": "ExpressionStatement",
                  "src": "4517:27:24"
                },
                {
                  "expression": {
                    "id": 4973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4969,
                      "name": "strategistRemitter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4855,
                      "src": "4555:18:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 4970,
                        "name": "_feeRemitters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4909,
                        "src": "4576:13:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 4972,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 4971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4590:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4576:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4555:37:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4974,
                  "nodeType": "ExpressionStatement",
                  "src": "4555:37:24"
                },
                {
                  "body": {
                    "id": 4993,
                    "nodeType": "Block",
                    "src": "4655:66:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4987,
                              "name": "STRATEGIST",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4843,
                              "src": "4681:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 4988,
                                "name": "_strategists",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4912,
                                "src": "4693:12:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 4990,
                              "indexExpression": {
                                "id": 4989,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4976,
                                "src": "4706:1:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4693:15:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4986,
                            "name": "_grantRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              114
                            ],
                            "referencedDeclaration": 114,
                            "src": "4670:10:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address)"
                            }
                          },
                          "id": 4991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4670:39:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4992,
                        "nodeType": "ExpressionStatement",
                        "src": "4670:39:24"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4979,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4976,
                      "src": "4625:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 4980,
                        "name": "_strategists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4912,
                        "src": "4629:12:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 4981,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4629:19:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4625:23:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4994,
                  "initializationExpression": {
                    "assignments": [
                      4976
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 4976,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4618:1:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 4994,
                        "src": "4610:9:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4975,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4610:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 4978,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 4977,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4622:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4610:13:24"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 4984,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4650:3:24",
                      "subExpression": {
                        "id": 4983,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4976,
                        "src": "4650:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4985,
                    "nodeType": "ExpressionStatement",
                    "src": "4650:3:24"
                  },
                  "nodeType": "ForStatement",
                  "src": "4605:116:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 4999,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "4769:5:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 5000,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "4769:15:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 5002,
                                    "name": "_vault",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4906,
                                    "src": "4810:6:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 5001,
                                  "name": "IVault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6994,
                                  "src": "4803:6:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IVault_$6994_$",
                                    "typeString": "type(contract IVault)"
                                  }
                                },
                                "id": 5003,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4803:14:24",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IVault_$6994",
                                  "typeString": "contract IVault"
                                }
                              },
                              "id": 5004,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getPricePerFullShare",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6993,
                              "src": "4803:35:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 5005,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4803:37:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 4998,
                          "name": "Harvest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4827,
                          "src": "4749:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Harvest_$4827_storage_ptr_$",
                            "typeString": "type(struct ReaperBaseStrategyv1_1.Harvest storage pointer)"
                          }
                        },
                        "id": 5006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "timestamp",
                          "vaultSharePrice"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "4749:93:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Harvest_$4827_memory_ptr",
                          "typeString": "struct ReaperBaseStrategyv1_1.Harvest memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Harvest_$4827_memory_ptr",
                          "typeString": "struct ReaperBaseStrategyv1_1.Harvest memory"
                        }
                      ],
                      "expression": {
                        "id": 4995,
                        "name": "harvestLog",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4831,
                        "src": "4733:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Harvest_$4827_storage_$dyn_storage",
                          "typeString": "struct ReaperBaseStrategyv1_1.Harvest storage ref[] storage ref"
                        }
                      },
                      "id": 4997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4733:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Harvest_$4827_storage_$dyn_storage_ptr_$_t_struct$_Harvest_$4827_storage_$returns$__$bound_to$_t_array$_t_struct$_Harvest_$4827_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct ReaperBaseStrategyv1_1.Harvest storage ref[] storage pointer,struct ReaperBaseStrategyv1_1.Harvest storage ref)"
                      }
                    },
                    "id": 5007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4733:110:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5008,
                  "nodeType": "ExpressionStatement",
                  "src": "4733:110:24"
                }
              ]
            },
            "id": 5010,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4915,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4914,
                  "name": "onlyInitializing",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1056,
                  "src": "4079:16:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "4079:16:24"
              }
            ],
            "name": "__ReaperBaseStrategy_init",
            "nameLocation": "3931:25:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4913,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4906,
                  "mutability": "mutable",
                  "name": "_vault",
                  "nameLocation": "3975:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 5010,
                  "src": "3967:14:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4905,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3967:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4909,
                  "mutability": "mutable",
                  "name": "_feeRemitters",
                  "nameLocation": "4009:13:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 5010,
                  "src": "3992:30:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4907,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3992:7:24",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 4908,
                    "nodeType": "ArrayTypeName",
                    "src": "3992:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4912,
                  "mutability": "mutable",
                  "name": "_strategists",
                  "nameLocation": "4050:12:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 5010,
                  "src": "4033:29:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4910,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4033:7:24",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 4911,
                    "nodeType": "ArrayTypeName",
                    "src": "4033:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3956:113:24"
            },
            "returnParameters": {
              "id": 4916,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4096:0:24"
            },
            "scope": 5640,
            "src": "3922:929:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              6539
            ],
            "body": {
              "id": 5020,
              "nodeType": "Block",
              "src": "5136:29:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5017,
                      "name": "_deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5613,
                      "src": "5147:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 5018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5147:10:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5019,
                  "nodeType": "ExpressionStatement",
                  "src": "5147:10:24"
                }
              ]
            },
            "documentation": {
              "id": 5011,
              "nodeType": "StructuredDocumentation",
              "src": "4859:222:24",
              "text": " @dev Function that puts the funds to work.\n      It gets called whenever someone deposits in the strategy's vault contract.\n      Deposits go through only when the strategy is not paused."
            },
            "functionSelector": "d0e30db0",
            "id": 5021,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5015,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5014,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1311,
                  "src": "5122:13:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "5122:13:24"
              }
            ],
            "name": "deposit",
            "nameLocation": "5096:7:24",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5013,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5113:8:24"
            },
            "parameters": {
              "id": 5012,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5103:2:24"
            },
            "returnParameters": {
              "id": 5016,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5136:0:24"
            },
            "scope": 5640,
            "src": "5087:78:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6544
            ],
            "body": {
              "id": 5068,
              "nodeType": "Block",
              "src": "5427:307:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5029,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5446:3:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 5030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5446:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 5031,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4853,
                          "src": "5460:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5446:19:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "217661756c74",
                        "id": 5033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5467:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_935dae7e2471bb42a624e3787c1dd49fe36e63fd03e67a6f90f78ba819cb3825",
                          "typeString": "literal_string \"!vault\""
                        },
                        "value": "!vault"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_935dae7e2471bb42a624e3787c1dd49fe36e63fd03e67a6f90f78ba819cb3825",
                          "typeString": "literal_string \"!vault\""
                        }
                      ],
                      "id": 5028,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5438:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5438:38:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5035,
                  "nodeType": "ExpressionStatement",
                  "src": "5438:38:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5037,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5024,
                          "src": "5495:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 5038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5506:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5495:12:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c696420616d6f756e74",
                        "id": 5040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5509:16:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_428d2b45bb1c86227a8688f1c30f1c359824c9298dfce034ebf8ca193afdf5e7",
                          "typeString": "literal_string \"invalid amount\""
                        },
                        "value": "invalid amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_428d2b45bb1c86227a8688f1c30f1c359824c9298dfce034ebf8ca193afdf5e7",
                          "typeString": "literal_string \"invalid amount\""
                        }
                      ],
                      "id": 5036,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5487:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5487:39:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5042,
                  "nodeType": "ExpressionStatement",
                  "src": "5487:39:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5044,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5024,
                          "src": "5545:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 5045,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5206,
                            "src": "5556:9:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 5046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5556:11:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5545:22:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c696420616d6f756e74",
                        "id": 5048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5569:16:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_428d2b45bb1c86227a8688f1c30f1c359824c9298dfce034ebf8ca193afdf5e7",
                          "typeString": "literal_string \"invalid amount\""
                        },
                        "value": "invalid amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_428d2b45bb1c86227a8688f1c30f1c359824c9298dfce034ebf8ca193afdf5e7",
                          "typeString": "literal_string \"invalid amount\""
                        }
                      ],
                      "id": 5043,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5537:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5537:49:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5050,
                  "nodeType": "ExpressionStatement",
                  "src": "5537:49:24"
                },
                {
                  "assignments": [
                    5052
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5052,
                      "mutability": "mutable",
                      "name": "withdrawFee",
                      "nameLocation": "5607:11:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 5068,
                      "src": "5599:19:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5051,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5599:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5059,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5055,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5053,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5024,
                            "src": "5622:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 5054,
                            "name": "securityFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4876,
                            "src": "5632:11:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5622:21:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 5056,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5621:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 5057,
                      "name": "PERCENT_DIVISOR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4816,
                      "src": "5647:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5621:41:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5599:63:24"
                },
                {
                  "expression": {
                    "id": 5062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5060,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5024,
                      "src": "5673:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 5061,
                      "name": "withdrawFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5052,
                      "src": "5684:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5673:22:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5063,
                  "nodeType": "ExpressionStatement",
                  "src": "5673:22:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5065,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5024,
                        "src": "5718:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5064,
                      "name": "_withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5619,
                      "src": "5708:9:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 5066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5708:18:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5067,
                  "nodeType": "ExpressionStatement",
                  "src": "5708:18:24"
                }
              ]
            },
            "documentation": {
              "id": 5022,
              "nodeType": "StructuredDocumentation",
              "src": "5173:195:24",
              "text": " @dev Withdraws funds and sends them back to the vault. Can only\n      be called by the vault. _amount must be valid and security fee\n      is deducted up-front."
            },
            "functionSelector": "2e1a7d4d",
            "id": 5069,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "5383:8:24",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5026,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5418:8:24"
            },
            "parameters": {
              "id": 5025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5024,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5400:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 5069,
                  "src": "5392:15:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5023,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5392:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5391:17:24"
            },
            "returnParameters": {
              "id": 5027,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5427:0:24"
            },
            "scope": 5640,
            "src": "5374:360:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              6547
            ],
            "body": {
              "id": 5117,
              "nodeType": "Block",
              "src": "5970:392:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5076,
                      "name": "_harvestCore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5623,
                      "src": "5981:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 5077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5981:14:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5078,
                  "nodeType": "ExpressionStatement",
                  "src": "5981:14:24"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 5079,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "6012:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 5080,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "6012:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 5089,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 5081,
                            "name": "harvestLog",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4831,
                            "src": "6031:10:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Harvest_$4827_storage_$dyn_storage",
                              "typeString": "struct ReaperBaseStrategyv1_1.Harvest storage ref[] storage ref"
                            }
                          },
                          "id": 5086,
                          "indexExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 5085,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 5082,
                                "name": "harvestLog",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4831,
                                "src": "6042:10:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Harvest_$4827_storage_$dyn_storage",
                                  "typeString": "struct ReaperBaseStrategyv1_1.Harvest storage ref[] storage ref"
                                }
                              },
                              "id": 5083,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "6042:17:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 5084,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6062:1:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "6042:21:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6031:33:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Harvest_$4827_storage",
                            "typeString": "struct ReaperBaseStrategyv1_1.Harvest storage ref"
                          }
                        },
                        "id": 5087,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4824,
                        "src": "6031:43:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 5088,
                        "name": "harvestLogCadence",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4833,
                        "src": "6077:17:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6031:63:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6012:82:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5106,
                  "nodeType": "IfStatement",
                  "src": "6008:256:24",
                  "trueBody": {
                    "id": 5105,
                    "nodeType": "Block",
                    "src": "6096:168:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 5095,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967292,
                                    "src": "6165:5:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 5096,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "6165:15:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 5098,
                                          "name": "vault",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4853,
                                          "src": "6206:5:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 5097,
                                        "name": "IVault",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6994,
                                        "src": "6199:6:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_IVault_$6994_$",
                                          "typeString": "type(contract IVault)"
                                        }
                                      },
                                      "id": 5099,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6199:13:24",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IVault_$6994",
                                        "typeString": "contract IVault"
                                      }
                                    },
                                    "id": 5100,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "getPricePerFullShare",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 6993,
                                    "src": "6199:34:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view external returns (uint256)"
                                    }
                                  },
                                  "id": 5101,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6199:36:24",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 5094,
                                "name": "Harvest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4827,
                                "src": "6145:7:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_Harvest_$4827_storage_ptr_$",
                                  "typeString": "type(struct ReaperBaseStrategyv1_1.Harvest storage pointer)"
                                }
                              },
                              "id": 5102,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "names": [
                                "timestamp",
                                "vaultSharePrice"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "6145:92:24",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Harvest_$4827_memory_ptr",
                                "typeString": "struct ReaperBaseStrategyv1_1.Harvest memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Harvest_$4827_memory_ptr",
                                "typeString": "struct ReaperBaseStrategyv1_1.Harvest memory"
                              }
                            ],
                            "expression": {
                              "id": 5091,
                              "name": "harvestLog",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4831,
                              "src": "6111:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Harvest_$4827_storage_$dyn_storage",
                                "typeString": "struct ReaperBaseStrategyv1_1.Harvest storage ref[] storage ref"
                              }
                            },
                            "id": 5093,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "6111:15:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Harvest_$4827_storage_$dyn_storage_ptr_$_t_struct$_Harvest_$4827_storage_$returns$__$bound_to$_t_array$_t_struct$_Harvest_$4827_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct ReaperBaseStrategyv1_1.Harvest storage ref[] storage pointer,struct ReaperBaseStrategyv1_1.Harvest storage ref)"
                            }
                          },
                          "id": 5103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6111:141:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5104,
                        "nodeType": "ExpressionStatement",
                        "src": "6111:141:24"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 5110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5107,
                      "name": "lastHarvestTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4835,
                      "src": "6276:20:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 5108,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "6299:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 5109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "6299:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6276:38:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5111,
                  "nodeType": "ExpressionStatement",
                  "src": "6276:38:24"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5113,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6343:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6343:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5112,
                      "name": "StratHarvest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4893,
                      "src": "6330:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 5115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6330:24:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5116,
                  "nodeType": "EmitStatement",
                  "src": "6325:29:24"
                }
              ]
            },
            "documentation": {
              "id": 5070,
              "nodeType": "StructuredDocumentation",
              "src": "5742:171:24",
              "text": " @dev harvest() function that takes care of logging. Subcontracts should\n      override _harvestCore() and implement their specific logic in it."
            },
            "functionSelector": "4641257d",
            "id": 5118,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5074,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5073,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1311,
                  "src": "5956:13:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "5956:13:24"
              }
            ],
            "name": "harvest",
            "nameLocation": "5928:7:24",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5072,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5947:8:24"
            },
            "parameters": {
              "id": 5071,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5935:2:24"
            },
            "returnParameters": {
              "id": 5075,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5970:0:24"
            },
            "scope": 5640,
            "src": "5919:443:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5126,
              "nodeType": "Block",
              "src": "6430:43:24",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 5123,
                      "name": "harvestLog",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4831,
                      "src": "6448:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Harvest_$4827_storage_$dyn_storage",
                        "typeString": "struct ReaperBaseStrategyv1_1.Harvest storage ref[] storage ref"
                      }
                    },
                    "id": 5124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "6448:17:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5122,
                  "id": 5125,
                  "nodeType": "Return",
                  "src": "6441:24:24"
                }
              ]
            },
            "functionSelector": "2d6f4baa",
            "id": 5127,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "harvestLogLength",
            "nameLocation": "6379:16:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6395:2:24"
            },
            "returnParameters": {
              "id": 5122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5121,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5127,
                  "src": "6421:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5120,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6421:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6420:9:24"
            },
            "scope": 5640,
            "src": "6370:103:24",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5184,
              "nodeType": "Block",
              "src": "6799:397:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5136,
                            "name": "harvestLog",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4831,
                            "src": "6818:10:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Harvest_$4827_storage_$dyn_storage",
                              "typeString": "struct ReaperBaseStrategyv1_1.Harvest storage ref[] storage ref"
                            }
                          },
                          "id": 5137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6818:17:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 5138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6839:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "6818:22:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e656564206174206c656173742032206c6f6720656e7472696573",
                        "id": 5140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6842:29:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a809199c839464e4d7d2fa8595bf4c9e51d15f12f845701e8a916904546740b1",
                          "typeString": "literal_string \"need at least 2 log entries\""
                        },
                        "value": "need at least 2 log entries"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a809199c839464e4d7d2fa8595bf4c9e51d15f12f845701e8a916904546740b1",
                          "typeString": "literal_string \"need at least 2 log entries\""
                        }
                      ],
                      "id": 5135,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6810:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6810:62:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5142,
                  "nodeType": "ExpressionStatement",
                  "src": "6810:62:24"
                },
                {
                  "assignments": [
                    5144
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5144,
                      "mutability": "mutable",
                      "name": "runningAPRSum",
                      "nameLocation": "6892:13:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 5184,
                      "src": "6885:20:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 5143,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6885:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5145,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6885:20:24"
                },
                {
                  "assignments": [
                    5147
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5147,
                      "mutability": "mutable",
                      "name": "numLogsProcessed",
                      "nameLocation": "6923:16:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 5184,
                      "src": "6916:23:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 5146,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6916:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5148,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6916:23:24"
                },
                {
                  "body": {
                    "id": 5178,
                    "nodeType": "Block",
                    "src": "7029:108:24",
                    "statements": [
                      {
                        "expression": {
                          "id": 5173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 5166,
                            "name": "runningAPRSum",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5144,
                            "src": "7044:13:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 5170,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 5168,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5150,
                                  "src": "7083:1:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 5169,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7087:1:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "7083:5:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 5171,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5150,
                                "src": "7090:1:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 5167,
                              "name": "calculateAPRUsingLogs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5554,
                              "src": "7061:21:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_int256_$",
                                "typeString": "function (uint256,uint256) view returns (int256)"
                              }
                            },
                            "id": 5172,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7061:31:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "7044:48:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 5174,
                        "nodeType": "ExpressionStatement",
                        "src": "7044:48:24"
                      },
                      {
                        "expression": {
                          "id": 5176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "7107:18:24",
                          "subExpression": {
                            "id": 5175,
                            "name": "numLogsProcessed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5147,
                            "src": "7107:16:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 5177,
                        "nodeType": "ExpressionStatement",
                        "src": "7107:18:24"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 5162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 5158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 5156,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5150,
                        "src": "6992:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 5157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6996:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6992:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "id": 5161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 5159,
                        "name": "numLogsProcessed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5147,
                        "src": "7001:16:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 5160,
                        "name": "_n",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5130,
                        "src": "7020:2:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "src": "7001:21:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6992:30:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5179,
                  "initializationExpression": {
                    "assignments": [
                      5150
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 5150,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6965:1:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 5179,
                        "src": "6957:9:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 5149,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6957:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 5155,
                    "initialValue": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 5154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 5151,
                          "name": "harvestLog",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4831,
                          "src": "6969:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Harvest_$4827_storage_$dyn_storage",
                            "typeString": "struct ReaperBaseStrategyv1_1.Harvest storage ref[] storage ref"
                          }
                        },
                        "id": 5152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "6969:17:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 5153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6989:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "6969:21:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6957:33:24"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 5164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "--",
                      "prefix": false,
                      "src": "7024:3:24",
                      "subExpression": {
                        "id": 5163,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5150,
                        "src": "7024:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 5165,
                    "nodeType": "ExpressionStatement",
                    "src": "7024:3:24"
                  },
                  "nodeType": "ForStatement",
                  "src": "6952:185:24"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 5182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5180,
                      "name": "runningAPRSum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5144,
                      "src": "7156:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 5181,
                      "name": "numLogsProcessed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5147,
                      "src": "7172:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "7156:32:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 5134,
                  "id": 5183,
                  "nodeType": "Return",
                  "src": "7149:39:24"
                }
              ]
            },
            "documentation": {
              "id": 5128,
              "nodeType": "StructuredDocumentation",
              "src": "6481:231:24",
              "text": " @dev Traverses the harvest log backwards _n items,\n      and returns the average APR calculated across all the included\n      log entries. APR is multiplied by PERCENT_DIVISOR to retain precision."
            },
            "functionSelector": "f4852a81",
            "id": 5185,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "averageAPRAcrossLastNHarvests",
            "nameLocation": "6727:29:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5130,
                  "mutability": "mutable",
                  "name": "_n",
                  "nameLocation": "6764:2:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 5185,
                  "src": "6757:9:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 5129,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6757:6:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6756:11:24"
            },
            "returnParameters": {
              "id": 5134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5133,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5185,
                  "src": "6791:6:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 5132,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6791:6:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6790:8:24"
            },
            "scope": 5640,
            "src": "6718:478:24",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5198,
              "nodeType": "Block",
              "src": "7358:94:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5191,
                      "name": "_onlyStrategistOrOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5446,
                      "src": "7369:22:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 5192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7369:24:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5193,
                  "nodeType": "ExpressionStatement",
                  "src": "7369:24:24"
                },
                {
                  "expression": {
                    "id": 5196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5194,
                      "name": "harvestLogCadence",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4833,
                      "src": "7404:17:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5195,
                      "name": "_newCadenceInSeconds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5188,
                      "src": "7424:20:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7404:40:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5197,
                  "nodeType": "ExpressionStatement",
                  "src": "7404:40:24"
                }
              ]
            },
            "documentation": {
              "id": 5186,
              "nodeType": "StructuredDocumentation",
              "src": "7204:76:24",
              "text": " @dev Only strategist or owner can edit the log cadence."
            },
            "functionSelector": "ec90b122",
            "id": 5199,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateHarvestLogCadence",
            "nameLocation": "7295:23:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5188,
                  "mutability": "mutable",
                  "name": "_newCadenceInSeconds",
                  "nameLocation": "7327:20:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 5199,
                  "src": "7319:28:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5187,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7319:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7318:30:24"
            },
            "returnParameters": {
              "id": 5190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7358:0:24"
            },
            "scope": 5640,
            "src": "7286:166:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              6552
            ],
            "documentation": {
              "id": 5200,
              "nodeType": "StructuredDocumentation",
              "src": "7460:180:24",
              "text": " @dev Function to calculate the total {want} held by the strat.\n      It takes into account both the funds in hand, plus the funds in external contracts."
            },
            "functionSelector": "722713f7",
            "id": 5206,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "7655:9:24",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5202,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7687:8:24"
            },
            "parameters": {
              "id": 5201,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7664:2:24"
            },
            "returnParameters": {
              "id": 5205,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5204,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5206,
                  "src": "7705:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5203,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7705:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7704:9:24"
            },
            "scope": 5640,
            "src": "7646:68:24",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6562
            ],
            "body": {
              "id": 5217,
              "nodeType": "Block",
              "src": "8097:68:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5211,
                      "name": "_onlyStrategistOrOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5446,
                      "src": "8108:22:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 5212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8108:24:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5213,
                  "nodeType": "ExpressionStatement",
                  "src": "8108:24:24"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5214,
                      "name": "_retireStrat",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5627,
                      "src": "8143:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 5215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8143:14:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5216,
                  "nodeType": "ExpressionStatement",
                  "src": "8143:14:24"
                }
              ]
            },
            "documentation": {
              "id": 5207,
              "nodeType": "StructuredDocumentation",
              "src": "7722:328:24",
              "text": " @dev Function to retire the strategy. Claims all rewards and withdraws\n      all principal from external contracts, and sends everything back to\n      the vault. Can only be called by strategist or owner.\n Note: this is not an emergency withdraw function. For that, see panic()."
            },
            "functionSelector": "fb617787",
            "id": 5218,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retireStrat",
            "nameLocation": "8065:11:24",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5209,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8088:8:24"
            },
            "parameters": {
              "id": 5208,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8076:2:24"
            },
            "returnParameters": {
              "id": 5210,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8097:0:24"
            },
            "scope": 5640,
            "src": "8056:109:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              6565
            ],
            "body": {
              "id": 5232,
              "nodeType": "Block",
              "src": "8299:86:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5223,
                      "name": "_onlyStrategistOrOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5446,
                      "src": "8310:22:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 5224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8310:24:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5225,
                  "nodeType": "ExpressionStatement",
                  "src": "8310:24:24"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5226,
                      "name": "_reclaimWant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5631,
                      "src": "8345:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 5227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8345:14:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5228,
                  "nodeType": "ExpressionStatement",
                  "src": "8345:14:24"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5229,
                      "name": "pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5248,
                      "src": "8370:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 5230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8370:7:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5231,
                  "nodeType": "ExpressionStatement",
                  "src": "8370:7:24"
                }
              ]
            },
            "documentation": {
              "id": 5219,
              "nodeType": "StructuredDocumentation",
              "src": "8173:85:24",
              "text": " @dev Pauses deposits. Withdraws all funds leaving rewards behind"
            },
            "functionSelector": "4700d305",
            "id": 5233,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "panic",
            "nameLocation": "8273:5:24",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5221,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8290:8:24"
            },
            "parameters": {
              "id": 5220,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8278:2:24"
            },
            "returnParameters": {
              "id": 5222,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8299:0:24"
            },
            "scope": 5640,
            "src": "8264:121:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              6568
            ],
            "body": {
              "id": 5247,
              "nodeType": "Block",
              "src": "8585:92:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5238,
                      "name": "_onlyStrategistOrOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5446,
                      "src": "8596:22:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 5239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8596:24:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5240,
                  "nodeType": "ExpressionStatement",
                  "src": "8596:24:24"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5241,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1338,
                      "src": "8631:6:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 5242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8631:8:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5243,
                  "nodeType": "ExpressionStatement",
                  "src": "8631:8:24"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5244,
                      "name": "_removeAllowances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5639,
                      "src": "8650:17:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 5245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8650:19:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5246,
                  "nodeType": "ExpressionStatement",
                  "src": "8650:19:24"
                }
              ]
            },
            "documentation": {
              "id": 5234,
              "nodeType": "StructuredDocumentation",
              "src": "8393:153:24",
              "text": " @dev Pauses the strat. Deposits become disabled but users can still\n      withdraw. Removes allowances of external contracts."
            },
            "functionSelector": "8456cb59",
            "id": 5248,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pause",
            "nameLocation": "8561:5:24",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5236,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8576:8:24"
            },
            "parameters": {
              "id": 5235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8566:2:24"
            },
            "returnParameters": {
              "id": 5237,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8585:0:24"
            },
            "scope": 5640,
            "src": "8552:125:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6571
            ],
            "body": {
              "id": 5265,
              "nodeType": "Block",
              "src": "8879:112:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5253,
                      "name": "_onlyStrategistOrOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5446,
                      "src": "8890:22:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 5254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8890:24:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5255,
                  "nodeType": "ExpressionStatement",
                  "src": "8890:24:24"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5256,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1354,
                      "src": "8925:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 5257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8925:10:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5258,
                  "nodeType": "ExpressionStatement",
                  "src": "8925:10:24"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5259,
                      "name": "_giveAllowances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5635,
                      "src": "8946:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 5260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8946:17:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5261,
                  "nodeType": "ExpressionStatement",
                  "src": "8946:17:24"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5262,
                      "name": "deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5021,
                      "src": "8974:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 5263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8974:9:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5264,
                  "nodeType": "ExpressionStatement",
                  "src": "8974:9:24"
                }
              ]
            },
            "documentation": {
              "id": 5249,
              "nodeType": "StructuredDocumentation",
              "src": "8685:151:24",
              "text": " @dev Unpauses the strat. Opens up deposits again and invokes deposit().\n      Reinstates allowances for external contracts."
            },
            "functionSelector": "3f4ba83a",
            "id": 5266,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unpause",
            "nameLocation": "8851:7:24",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5251,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8870:8:24"
            },
            "parameters": {
              "id": 5250,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8858:2:24"
            },
            "returnParameters": {
              "id": 5252,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8879:0:24"
            },
            "scope": 5640,
            "src": "8842:149:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5290,
              "nodeType": "Block",
              "src": "9160:136:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5276,
                          "name": "_totalFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5269,
                          "src": "9179:9:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 5277,
                          "name": "MAX_FEE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4859,
                          "src": "9192:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9179:20:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46656520546f6f2048696768",
                        "id": 5279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9201:14:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dd79abb926fa61eb30c32197ac03e0cb4077bc1f9887c19398b35587aa79f879",
                          "typeString": "literal_string \"Fee Too High\""
                        },
                        "value": "Fee Too High"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dd79abb926fa61eb30c32197ac03e0cb4077bc1f9887c19398b35587aa79f879",
                          "typeString": "literal_string \"Fee Too High\""
                        }
                      ],
                      "id": 5275,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9171:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9171:45:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5281,
                  "nodeType": "ExpressionStatement",
                  "src": "9171:45:24"
                },
                {
                  "expression": {
                    "id": 5284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5282,
                      "name": "totalFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4868,
                      "src": "9227:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5283,
                      "name": "_totalFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5269,
                      "src": "9238:9:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9227:20:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5285,
                  "nodeType": "ExpressionStatement",
                  "src": "9227:20:24"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5287,
                        "name": "totalFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4868,
                        "src": "9279:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5286,
                      "name": "TotalFeeUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4881,
                      "src": "9263:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 5288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9263:25:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5289,
                  "nodeType": "EmitStatement",
                  "src": "9258:30:24"
                }
              ]
            },
            "documentation": {
              "id": 5267,
              "nodeType": "StructuredDocumentation",
              "src": "8999:74:24",
              "text": " @dev updates the total fee, capped at 5%; only owner."
            },
            "functionSelector": "d32b9604",
            "id": 5291,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 5272,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 187,
                    "src": "9140:18:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 5273,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5271,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 198,
                  "src": "9131:8:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "9131:28:24"
              }
            ],
            "name": "updateTotalFee",
            "nameLocation": "9088:14:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5270,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5269,
                  "mutability": "mutable",
                  "name": "_totalFee",
                  "nameLocation": "9111:9:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 5291,
                  "src": "9103:17:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5268,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9103:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9102:19:24"
            },
            "returnParameters": {
              "id": 5274,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9160:0:24"
            },
            "scope": 5640,
            "src": "9079:217:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5342,
              "nodeType": "Block",
              "src": "9792:386:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5307,
                            "name": "_callFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5294,
                            "src": "9811:8:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 5308,
                            "name": "_treasuryFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5296,
                            "src": "9822:12:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9811:23:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 5310,
                          "name": "PERCENT_DIVISOR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4816,
                          "src": "9838:15:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9811:42:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "73756d20213d2050455243454e545f44495649534f52",
                        "id": 5312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9855:24:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a304a87f35ac68da46c7f1fb9ce8368ea318723b195296acb4be933518951ec0",
                          "typeString": "literal_string \"sum != PERCENT_DIVISOR\""
                        },
                        "value": "sum != PERCENT_DIVISOR"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a304a87f35ac68da46c7f1fb9ce8368ea318723b195296acb4be933518951ec0",
                          "typeString": "literal_string \"sum != PERCENT_DIVISOR\""
                        }
                      ],
                      "id": 5306,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9803:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9803:77:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5314,
                  "nodeType": "ExpressionStatement",
                  "src": "9803:77:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5316,
                          "name": "_strategistFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5298,
                          "src": "9899:14:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 5317,
                          "name": "STRATEGIST_MAX_FEE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4862,
                          "src": "9917:18:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9899:36:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7374726174656769737420666565203e20535452415445474953545f4d41585f464545",
                        "id": 5319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9937:37:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa5173db46f462f798ecd63a738a1cad195f1236a1df4824e44394b82fcb908f",
                          "typeString": "literal_string \"strategist fee > STRATEGIST_MAX_FEE\""
                        },
                        "value": "strategist fee > STRATEGIST_MAX_FEE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aa5173db46f462f798ecd63a738a1cad195f1236a1df4824e44394b82fcb908f",
                          "typeString": "literal_string \"strategist fee > STRATEGIST_MAX_FEE\""
                        }
                      ],
                      "id": 5315,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9891:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9891:84:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5321,
                  "nodeType": "ExpressionStatement",
                  "src": "9891:84:24"
                },
                {
                  "expression": {
                    "id": 5324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5322,
                      "name": "callFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4870,
                      "src": "9988:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5323,
                      "name": "_callFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5294,
                      "src": "9998:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9988:18:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5325,
                  "nodeType": "ExpressionStatement",
                  "src": "9988:18:24"
                },
                {
                  "expression": {
                    "id": 5328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5326,
                      "name": "treasuryFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4872,
                      "src": "10017:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5327,
                      "name": "_treasuryFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5296,
                      "src": "10031:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10017:26:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5329,
                  "nodeType": "ExpressionStatement",
                  "src": "10017:26:24"
                },
                {
                  "expression": {
                    "id": 5332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5330,
                      "name": "strategistFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4874,
                      "src": "10054:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5331,
                      "name": "_strategistFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5298,
                      "src": "10070:14:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10054:30:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5333,
                  "nodeType": "ExpressionStatement",
                  "src": "10054:30:24"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5335,
                        "name": "callFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4870,
                        "src": "10112:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5336,
                        "name": "treasuryFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4872,
                        "src": "10121:11:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5337,
                        "name": "strategistFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4874,
                        "src": "10134:13:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5334,
                      "name": "FeesUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4889,
                      "src": "10100:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256)"
                      }
                    },
                    "id": 5338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10100:48:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5339,
                  "nodeType": "EmitStatement",
                  "src": "10095:53:24"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 5340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10166:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 5305,
                  "id": 5341,
                  "nodeType": "Return",
                  "src": "10159:11:24"
                }
              ]
            },
            "documentation": {
              "id": 5292,
              "nodeType": "StructuredDocumentation",
              "src": "9304:311:24",
              "text": " @dev updates the call fee, treasury fee, and strategist fee\n      call Fee + treasury Fee must add up to PERCENT_DIVISOR\n      strategist fee is expressed as % of the treasury fee and\n      must be no more than STRATEGIST_MAX_FEE\n      only owner"
            },
            "functionSelector": "22429085",
            "id": 5343,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 5301,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 187,
                    "src": "9757:18:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 5302,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5300,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 198,
                  "src": "9748:8:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "9748:28:24"
              }
            ],
            "name": "updateFees",
            "nameLocation": "9630:10:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5299,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5294,
                  "mutability": "mutable",
                  "name": "_callFee",
                  "nameLocation": "9659:8:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 5343,
                  "src": "9651:16:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5293,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9651:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5296,
                  "mutability": "mutable",
                  "name": "_treasuryFee",
                  "nameLocation": "9686:12:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 5343,
                  "src": "9678:20:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5295,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9678:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5298,
                  "mutability": "mutable",
                  "name": "_strategistFee",
                  "nameLocation": "9717:14:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 5343,
                  "src": "9709:22:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5297,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9709:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9640:98:24"
            },
            "returnParameters": {
              "id": 5305,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5304,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5343,
                  "src": "9786:4:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5303,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9786:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9785:6:24"
            },
            "scope": 5640,
            "src": "9621:557:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5362,
              "nodeType": "Block",
              "src": "10273:113:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5352,
                          "name": "_securityFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5345,
                          "src": "10292:12:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 5353,
                          "name": "MAX_SECURITY_FEE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4865,
                          "src": "10308:16:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10292:32:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66656520746f206869676821",
                        "id": 5355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10326:14:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c448da9480702d4828ec5375ae82a693d38219c170480554d51e7c5698f38a08",
                          "typeString": "literal_string \"fee to high!\""
                        },
                        "value": "fee to high!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c448da9480702d4828ec5375ae82a693d38219c170480554d51e7c5698f38a08",
                          "typeString": "literal_string \"fee to high!\""
                        }
                      ],
                      "id": 5351,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10284:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10284:57:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5357,
                  "nodeType": "ExpressionStatement",
                  "src": "10284:57:24"
                },
                {
                  "expression": {
                    "id": 5360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5358,
                      "name": "securityFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4876,
                      "src": "10352:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5359,
                      "name": "_securityFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5345,
                      "src": "10366:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10352:26:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5361,
                  "nodeType": "ExpressionStatement",
                  "src": "10352:26:24"
                }
              ]
            },
            "functionSelector": "61591149",
            "id": 5363,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 5348,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 187,
                    "src": "10253:18:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 5349,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5347,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 198,
                  "src": "10244:8:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "10244:28:24"
              }
            ],
            "name": "updateSecurityFee",
            "nameLocation": "10195:17:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5346,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5345,
                  "mutability": "mutable",
                  "name": "_securityFee",
                  "nameLocation": "10221:12:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 5363,
                  "src": "10213:20:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5344,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10213:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10212:22:24"
            },
            "returnParameters": {
              "id": 5350,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10273:0:24"
            },
            "scope": 5640,
            "src": "10186:200:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5380,
              "nodeType": "Block",
              "src": "10563:63:24",
              "statements": [
                {
                  "expression": {
                    "id": 5376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5374,
                      "name": "treasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4851,
                      "src": "10574:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5375,
                      "name": "newTreasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5366,
                      "src": "10585:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10574:22:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5377,
                  "nodeType": "ExpressionStatement",
                  "src": "10574:22:24"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 5378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10614:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 5373,
                  "id": 5379,
                  "nodeType": "Return",
                  "src": "10607:11:24"
                }
              ]
            },
            "documentation": {
              "id": 5364,
              "nodeType": "StructuredDocumentation",
              "src": "10394:65:24",
              "text": " @dev only owner can update treasury address."
            },
            "functionSelector": "7f51bb1f",
            "id": 5381,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 5369,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 187,
                    "src": "10528:18:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 5370,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5368,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 198,
                  "src": "10519:8:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "10519:28:24"
              }
            ],
            "name": "updateTreasury",
            "nameLocation": "10474:14:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5366,
                  "mutability": "mutable",
                  "name": "newTreasury",
                  "nameLocation": "10497:11:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 5381,
                  "src": "10489:19:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5365,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10489:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10488:21:24"
            },
            "returnParameters": {
              "id": 5373,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5372,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5381,
                  "src": "10557:4:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5371,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10557:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10556:6:24"
            },
            "scope": 5640,
            "src": "10465:161:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5425,
              "nodeType": "Block",
              "src": "11007:379:24",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 5388,
                          "name": "STRATEGIST",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4843,
                          "src": "11041:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 5387,
                        "name": "getRoleMemberCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90,
                        "src": "11022:18:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_uint256_$",
                          "typeString": "function (bytes32) view returns (uint256)"
                        }
                      },
                      "id": 5389,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11022:30:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 5390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11056:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "11022:35:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 5405,
                    "nodeType": "Block",
                    "src": "11126:70:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 5400,
                              "name": "STRATEGIST_MULTISIG",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4848,
                              "src": "11152:19:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 5401,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "11173:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 5402,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "11173:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 5399,
                            "name": "_checkRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              252,
                              295
                            ],
                            "referencedDeclaration": 295,
                            "src": "11141:10:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address) view"
                            }
                          },
                          "id": 5403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11141:43:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5404,
                        "nodeType": "ExpressionStatement",
                        "src": "11141:43:24"
                      }
                    ]
                  },
                  "id": 5406,
                  "nodeType": "IfStatement",
                  "src": "11018:178:24",
                  "trueBody": {
                    "id": 5398,
                    "nodeType": "Block",
                    "src": "11059:61:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 5393,
                              "name": "STRATEGIST",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4843,
                              "src": "11085:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 5394,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "11097:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 5395,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "11097:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 5392,
                            "name": "_checkRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              252,
                              295
                            ],
                            "referencedDeclaration": 295,
                            "src": "11074:10:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address) view"
                            }
                          },
                          "id": 5396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11074:34:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5397,
                        "nodeType": "ExpressionStatement",
                        "src": "11074:34:24"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5408,
                          "name": "_newStrategistRemitter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5384,
                          "src": "11216:22:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5411,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11250:1:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5410,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11242:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5409,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11242:7:24",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11242:10:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11216:36:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2130",
                        "id": 5414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11254:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d82c09c1e339ddf4938561c6880977372534e9a5bde34fdd2a0835488dc3f96b",
                          "typeString": "literal_string \"!0\""
                        },
                        "value": "!0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d82c09c1e339ddf4938561c6880977372534e9a5bde34fdd2a0835488dc3f96b",
                          "typeString": "literal_string \"!0\""
                        }
                      ],
                      "id": 5407,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11208:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11208:51:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5416,
                  "nodeType": "ExpressionStatement",
                  "src": "11208:51:24"
                },
                {
                  "expression": {
                    "id": 5419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5417,
                      "name": "strategistRemitter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4855,
                      "src": "11270:18:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5418,
                      "name": "_newStrategistRemitter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5384,
                      "src": "11291:22:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11270:43:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5420,
                  "nodeType": "ExpressionStatement",
                  "src": "11270:43:24"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5422,
                        "name": "_newStrategistRemitter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5384,
                        "src": "11355:22:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5421,
                      "name": "StrategistRemitterUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4897,
                      "src": "11329:25:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 5423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11329:49:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5424,
                  "nodeType": "EmitStatement",
                  "src": "11324:54:24"
                }
              ]
            },
            "documentation": {
              "id": 5382,
              "nodeType": "StructuredDocumentation",
              "src": "10634:292:24",
              "text": " @dev Updates the current strategistRemitter.\n      If there is only one strategist this function may be called by\n      that strategist. However if there are multiple strategists\n      this function may only be called by the STRATEGIST_MULTISIG role."
            },
            "functionSelector": "e46257d2",
            "id": 5426,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateStrategistRemitter",
            "nameLocation": "10941:24:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5385,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5384,
                  "mutability": "mutable",
                  "name": "_newStrategistRemitter",
                  "nameLocation": "10974:22:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 5426,
                  "src": "10966:30:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5383,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10966:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10965:32:24"
            },
            "returnParameters": {
              "id": 5386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11007:0:24"
            },
            "scope": 5640,
            "src": "10932:454:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5445,
              "nodeType": "Block",
              "src": "11514:120:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 5441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 5432,
                              "name": "STRATEGIST",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4843,
                              "src": "11541:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 5433,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "11553:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 5434,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "11553:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 5431,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 239,
                            "src": "11533:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 5435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11533:31:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 5437,
                              "name": "DEFAULT_ADMIN_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 187,
                              "src": "11576:18:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 5438,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "11596:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 5439,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "11596:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 5436,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 239,
                            "src": "11568:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 5440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11568:39:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "11533:74:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a6564",
                        "id": 5442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11609:16:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        },
                        "value": "Not authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        }
                      ],
                      "id": 5430,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11525:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11525:101:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5444,
                  "nodeType": "ExpressionStatement",
                  "src": "11525:101:24"
                }
              ]
            },
            "documentation": {
              "id": 5427,
              "nodeType": "StructuredDocumentation",
              "src": "11394:66:24",
              "text": " @dev Only allow access to strategist or owner"
            },
            "id": 5446,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_onlyStrategistOrOwner",
            "nameLocation": "11475:22:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5428,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11497:2:24"
            },
            "returnParameters": {
              "id": 5429,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11514:0:24"
            },
            "scope": 5640,
            "src": "11466:168:24",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5553,
              "nodeType": "Block",
              "src": "11865:1050:24",
              "statements": [
                {
                  "assignments": [
                    5458
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5458,
                      "mutability": "mutable",
                      "name": "start",
                      "nameLocation": "11892:5:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 5553,
                      "src": "11876:21:24",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Harvest_$4827_storage_ptr",
                        "typeString": "struct ReaperBaseStrategyv1_1.Harvest"
                      },
                      "typeName": {
                        "id": 5457,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5456,
                          "name": "Harvest",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4827,
                          "src": "11876:7:24"
                        },
                        "referencedDeclaration": 4827,
                        "src": "11876:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Harvest_$4827_storage_ptr",
                          "typeString": "struct ReaperBaseStrategyv1_1.Harvest"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5462,
                  "initialValue": {
                    "baseExpression": {
                      "id": 5459,
                      "name": "harvestLog",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4831,
                      "src": "11900:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Harvest_$4827_storage_$dyn_storage",
                        "typeString": "struct ReaperBaseStrategyv1_1.Harvest storage ref[] storage ref"
                      }
                    },
                    "id": 5461,
                    "indexExpression": {
                      "id": 5460,
                      "name": "_startIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5449,
                      "src": "11911:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11900:23:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Harvest_$4827_storage",
                      "typeString": "struct ReaperBaseStrategyv1_1.Harvest storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11876:47:24"
                },
                {
                  "assignments": [
                    5465
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5465,
                      "mutability": "mutable",
                      "name": "end",
                      "nameLocation": "11950:3:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 5553,
                      "src": "11934:19:24",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Harvest_$4827_storage_ptr",
                        "typeString": "struct ReaperBaseStrategyv1_1.Harvest"
                      },
                      "typeName": {
                        "id": 5464,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5463,
                          "name": "Harvest",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4827,
                          "src": "11934:7:24"
                        },
                        "referencedDeclaration": 4827,
                        "src": "11934:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Harvest_$4827_storage_ptr",
                          "typeString": "struct ReaperBaseStrategyv1_1.Harvest"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5469,
                  "initialValue": {
                    "baseExpression": {
                      "id": 5466,
                      "name": "harvestLog",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4831,
                      "src": "11956:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Harvest_$4827_storage_$dyn_storage",
                        "typeString": "struct ReaperBaseStrategyv1_1.Harvest storage ref[] storage ref"
                      }
                    },
                    "id": 5468,
                    "indexExpression": {
                      "id": 5467,
                      "name": "_endIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5451,
                      "src": "11967:9:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11956:21:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Harvest_$4827_storage",
                      "typeString": "struct ReaperBaseStrategyv1_1.Harvest storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11934:43:24"
                },
                {
                  "assignments": [
                    5471
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5471,
                      "mutability": "mutable",
                      "name": "increasing",
                      "nameLocation": "11993:10:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 5553,
                      "src": "11988:15:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 5470,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "11988:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5473,
                  "initialValue": {
                    "hexValue": "74727565",
                    "id": 5472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12006:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11988:22:24"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 5474,
                        "name": "end",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5465,
                        "src": "12025:3:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Harvest_$4827_storage_ptr",
                          "typeString": "struct ReaperBaseStrategyv1_1.Harvest storage pointer"
                        }
                      },
                      "id": 5475,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vaultSharePrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4826,
                      "src": "12025:19:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 5476,
                        "name": "start",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5458,
                        "src": "12047:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Harvest_$4827_storage_ptr",
                          "typeString": "struct ReaperBaseStrategyv1_1.Harvest storage pointer"
                        }
                      },
                      "id": 5477,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vaultSharePrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4826,
                      "src": "12047:21:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12025:43:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5484,
                  "nodeType": "IfStatement",
                  "src": "12021:94:24",
                  "trueBody": {
                    "id": 5483,
                    "nodeType": "Block",
                    "src": "12070:45:24",
                    "statements": [
                      {
                        "expression": {
                          "id": 5481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 5479,
                            "name": "increasing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5471,
                            "src": "12085:10:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 5480,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12098:5:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "12085:18:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5482,
                        "nodeType": "ExpressionStatement",
                        "src": "12085:18:24"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    5486
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5486,
                      "mutability": "mutable",
                      "name": "unsignedSharePriceChange",
                      "nameLocation": "12135:24:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 5553,
                      "src": "12127:32:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5485,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12127:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5487,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12127:32:24"
                },
                {
                  "condition": {
                    "id": 5488,
                    "name": "increasing",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5471,
                    "src": "12174:10:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 5506,
                    "nodeType": "Block",
                    "src": "12289:97:24",
                    "statements": [
                      {
                        "expression": {
                          "id": 5504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 5498,
                            "name": "unsignedSharePriceChange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5486,
                            "src": "12304:24:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 5503,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 5499,
                                "name": "start",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5458,
                                "src": "12331:5:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Harvest_$4827_storage_ptr",
                                  "typeString": "struct ReaperBaseStrategyv1_1.Harvest storage pointer"
                                }
                              },
                              "id": 5500,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "vaultSharePrice",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4826,
                              "src": "12331:21:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "expression": {
                                "id": 5501,
                                "name": "end",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5465,
                                "src": "12355:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Harvest_$4827_storage_ptr",
                                  "typeString": "struct ReaperBaseStrategyv1_1.Harvest storage pointer"
                                }
                              },
                              "id": 5502,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "vaultSharePrice",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4826,
                              "src": "12355:19:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "12331:43:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12304:70:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5505,
                        "nodeType": "ExpressionStatement",
                        "src": "12304:70:24"
                      }
                    ]
                  },
                  "id": 5507,
                  "nodeType": "IfStatement",
                  "src": "12170:216:24",
                  "trueBody": {
                    "id": 5497,
                    "nodeType": "Block",
                    "src": "12186:97:24",
                    "statements": [
                      {
                        "expression": {
                          "id": 5495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 5489,
                            "name": "unsignedSharePriceChange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5486,
                            "src": "12201:24:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 5494,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 5490,
                                "name": "end",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5465,
                                "src": "12228:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Harvest_$4827_storage_ptr",
                                  "typeString": "struct ReaperBaseStrategyv1_1.Harvest storage pointer"
                                }
                              },
                              "id": 5491,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "vaultSharePrice",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4826,
                              "src": "12228:19:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "expression": {
                                "id": 5492,
                                "name": "start",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5458,
                                "src": "12250:5:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Harvest_$4827_storage_ptr",
                                  "typeString": "struct ReaperBaseStrategyv1_1.Harvest storage pointer"
                                }
                              },
                              "id": 5493,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "vaultSharePrice",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4826,
                              "src": "12250:21:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "12228:43:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12201:70:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5496,
                        "nodeType": "ExpressionStatement",
                        "src": "12201:70:24"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    5509
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5509,
                      "mutability": "mutable",
                      "name": "unsignedPercentageChange",
                      "nameLocation": "12406:24:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 5553,
                      "src": "12398:32:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5508,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12398:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5517,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5510,
                            "name": "unsignedSharePriceChange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5486,
                            "src": "12434:24:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31653138",
                            "id": 5511,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12461:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          },
                          "src": "12434:31:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 5513,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "12433:33:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "expression": {
                        "id": 5514,
                        "name": "start",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5458,
                        "src": "12469:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Harvest_$4827_storage_ptr",
                          "typeString": "struct ReaperBaseStrategyv1_1.Harvest storage pointer"
                        }
                      },
                      "id": 5515,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vaultSharePrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4826,
                      "src": "12469:21:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12433:57:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12398:92:24"
                },
                {
                  "assignments": [
                    5519
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5519,
                      "mutability": "mutable",
                      "name": "timeDifference",
                      "nameLocation": "12509:14:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 5553,
                      "src": "12501:22:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5518,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12501:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5525,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 5520,
                        "name": "end",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5465,
                        "src": "12526:3:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Harvest_$4827_storage_ptr",
                          "typeString": "struct ReaperBaseStrategyv1_1.Harvest storage pointer"
                        }
                      },
                      "id": 5521,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4824,
                      "src": "12526:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "expression": {
                        "id": 5522,
                        "name": "start",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5458,
                        "src": "12542:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Harvest_$4827_storage_ptr",
                          "typeString": "struct ReaperBaseStrategyv1_1.Harvest storage pointer"
                        }
                      },
                      "id": 5523,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4824,
                      "src": "12542:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12526:31:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12501:56:24"
                },
                {
                  "assignments": [
                    5527
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5527,
                      "mutability": "mutable",
                      "name": "yearlyUnsignedPercentageChange",
                      "nameLocation": "12578:30:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 5553,
                      "src": "12570:38:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5526,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12570:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5534,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5528,
                            "name": "unsignedPercentageChange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5509,
                            "src": "12612:24:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 5529,
                            "name": "ONE_YEAR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4819,
                            "src": "12639:8:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12612:35:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 5531,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "12611:37:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 5532,
                      "name": "timeDifference",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5519,
                      "src": "12651:14:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12611:54:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12570:95:24"
                },
                {
                  "expression": {
                    "id": 5537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5535,
                      "name": "yearlyUnsignedPercentageChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5527,
                      "src": "12676:30:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "/=",
                    "rightHandSide": {
                      "hexValue": "31653134",
                      "id": 5536,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12710:4:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000_by_1",
                        "typeString": "int_const 100000000000000"
                      },
                      "value": "1e14"
                    },
                    "src": "12676:38:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5538,
                  "nodeType": "ExpressionStatement",
                  "src": "12676:38:24"
                },
                {
                  "condition": {
                    "id": 5539,
                    "name": "increasing",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5471,
                    "src": "12765:10:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5546,
                  "nodeType": "IfStatement",
                  "src": "12761:88:24",
                  "trueBody": {
                    "id": 5545,
                    "nodeType": "Block",
                    "src": "12777:72:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 5542,
                              "name": "yearlyUnsignedPercentageChange",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5527,
                              "src": "12806:30:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 5541,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12799:6:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_int256_$",
                              "typeString": "type(int256)"
                            },
                            "typeName": {
                              "id": 5540,
                              "name": "int256",
                              "nodeType": "ElementaryTypeName",
                              "src": "12799:6:24",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12799:38:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "functionReturnParameters": 5455,
                        "id": 5544,
                        "nodeType": "Return",
                        "src": "12792:45:24"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 5551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "-",
                    "prefix": true,
                    "src": "12868:39:24",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 5549,
                          "name": "yearlyUnsignedPercentageChange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5527,
                          "src": "12876:30:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 5548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "12869:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_int256_$",
                          "typeString": "type(int256)"
                        },
                        "typeName": {
                          "id": 5547,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12869:6:24",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 5550,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12869:38:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 5455,
                  "id": 5552,
                  "nodeType": "Return",
                  "src": "12861:46:24"
                }
              ]
            },
            "documentation": {
              "id": 5447,
              "nodeType": "StructuredDocumentation",
              "src": "11642:117:24",
              "text": " @dev Project an APR using the vault share price change between harvests at the provided indices."
            },
            "functionSelector": "8cf55882",
            "id": 5554,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateAPRUsingLogs",
            "nameLocation": "11774:21:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5452,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5449,
                  "mutability": "mutable",
                  "name": "_startIndex",
                  "nameLocation": "11804:11:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 5554,
                  "src": "11796:19:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5448,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11796:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5451,
                  "mutability": "mutable",
                  "name": "_endIndex",
                  "nameLocation": "11825:9:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 5554,
                  "src": "11817:17:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5450,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11817:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11795:40:24"
            },
            "returnParameters": {
              "id": 5455,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5454,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5554,
                  "src": "11857:6:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 5453,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11857:6:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11856:8:24"
            },
            "scope": 5640,
            "src": "11765:1150:24",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5566,
              "nodeType": "Block",
              "src": "13185:56:24",
              "statements": [
                {
                  "expression": {
                    "id": 5564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5561,
                      "name": "upgradeProposalTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4837,
                      "src": "13196:19:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 5562,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "13218:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 5563,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "13218:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13196:37:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5565,
                  "nodeType": "ExpressionStatement",
                  "src": "13196:37:24"
                }
              ]
            },
            "documentation": {
              "id": 5555,
              "nodeType": "StructuredDocumentation",
              "src": "12923:183:24",
              "text": " @dev DEFAULT_ADMIN_ROLE must call this function prior to upgrading the implementation\n      and wait UPGRADE_TIMELOCK seconds before executing the upgrade."
            },
            "functionSelector": "82b0b175",
            "id": 5567,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 5558,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 187,
                    "src": "13165:18:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 5559,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5557,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 198,
                  "src": "13156:8:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "13156:28:24"
              }
            ],
            "name": "initiateUpgradeCooldown",
            "nameLocation": "13121:23:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5556,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13144:2:24"
            },
            "returnParameters": {
              "id": 5560,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13185:0:24"
            },
            "scope": 5640,
            "src": "13112:129:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5584,
              "nodeType": "Block",
              "src": "13528:75:24",
              "statements": [
                {
                  "expression": {
                    "id": 5582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5574,
                      "name": "upgradeProposalTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4837,
                      "src": "13539:19:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 5581,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 5575,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "13561:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 5576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "13561:15:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 5579,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 5577,
                              "name": "ONE_YEAR",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4819,
                              "src": "13580:8:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "313030",
                              "id": 5578,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13591:3:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "13580:14:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 5580,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "13579:16:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "13561:34:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13539:56:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5583,
                  "nodeType": "ExpressionStatement",
                  "src": "13539:56:24"
                }
              ]
            },
            "documentation": {
              "id": 5568,
              "nodeType": "StructuredDocumentation",
              "src": "13249:205:24",
              "text": " @dev This function is called:\n      - in initialize()\n      - as part of a successful upgrade\n      - manually by DEFAULT_ADMIN_ROLE to clear the upgrade cooldown."
            },
            "functionSelector": "88879985",
            "id": 5585,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 5571,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 187,
                    "src": "13508:18:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 5572,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5570,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 198,
                  "src": "13499:8:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "13499:28:24"
              }
            ],
            "name": "clearUpgradeCooldown",
            "nameLocation": "13469:20:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5569,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13489:2:24"
            },
            "returnParameters": {
              "id": 5573,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13528:0:24"
            },
            "scope": 5640,
            "src": "13460:143:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1243
            ],
            "body": {
              "id": 5608,
              "nodeType": "Block",
              "src": "13904:159:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5596,
                            "name": "upgradeProposalTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4837,
                            "src": "13923:19:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 5597,
                            "name": "UPGRADE_TIMELOCK",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4822,
                            "src": "13945:16:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13923:38:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 5599,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "13964:5:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 5600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "13964:15:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13923:56:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "636f6f6c646f776e206e6f7420696e69746961746564206f72207374696c6c20616374697665",
                        "id": 5602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13981:40:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e92ad593fd0dc487c597b4f46b2fa829a3794ab9a64161ca8e6e8a9a47f4ebdd",
                          "typeString": "literal_string \"cooldown not initiated or still active\""
                        },
                        "value": "cooldown not initiated or still active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e92ad593fd0dc487c597b4f46b2fa829a3794ab9a64161ca8e6e8a9a47f4ebdd",
                          "typeString": "literal_string \"cooldown not initiated or still active\""
                        }
                      ],
                      "id": 5595,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "13915:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13915:107:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5604,
                  "nodeType": "ExpressionStatement",
                  "src": "13915:107:24"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5605,
                      "name": "clearUpgradeCooldown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5585,
                      "src": "14033:20:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 5606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14033:22:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5607,
                  "nodeType": "ExpressionStatement",
                  "src": "14033:22:24"
                }
              ]
            },
            "documentation": {
              "id": 5586,
              "nodeType": "StructuredDocumentation",
              "src": "13611:204:24",
              "text": " @dev This function must be overriden simply for access control purposes.\n      Only DEFAULT_ADMIN_ROLE can upgrade the implementation once the timelock\n      has passed."
            },
            "id": 5609,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 5592,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 187,
                    "src": "13884:18:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 5593,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5591,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 198,
                  "src": "13875:8:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "13875:28:24"
              }
            ],
            "name": "_authorizeUpgrade",
            "nameLocation": "13830:17:24",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5590,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "13866:8:24"
            },
            "parameters": {
              "id": 5589,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5588,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5609,
                  "src": "13848:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5587,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13848:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13847:9:24"
            },
            "returnParameters": {
              "id": 5594,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13904:0:24"
            },
            "scope": 5640,
            "src": "13821:242:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "documentation": {
              "id": 5610,
              "nodeType": "StructuredDocumentation",
              "src": "14071:92:24",
              "text": " @dev subclasses should add their custom deposit logic in this function."
            },
            "id": 5613,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "_deposit",
            "nameLocation": "14178:8:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5611,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14186:2:24"
            },
            "returnParameters": {
              "id": 5612,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14205:0:24"
            },
            "scope": 5640,
            "src": "14169:37:24",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "documentation": {
              "id": 5614,
              "nodeType": "StructuredDocumentation",
              "src": "14214:225:24",
              "text": " @dev subclasses should add their custom withdraw logic in this function.\n      Note that security fee has already been deducted, so it shouldn't be deducted\n      again within this function."
            },
            "id": 5619,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "_withdraw",
            "nameLocation": "14454:9:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5616,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "14472:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 5619,
                  "src": "14464:15:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5615,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14464:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14463:17:24"
            },
            "returnParameters": {
              "id": 5618,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14497:0:24"
            },
            "scope": 5640,
            "src": "14445:53:24",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "documentation": {
              "id": 5620,
              "nodeType": "StructuredDocumentation",
              "src": "14506:136:24",
              "text": " @dev subclasses should add their custom harvesting logic in this function\n      including charging any fees."
            },
            "id": 5623,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "_harvestCore",
            "nameLocation": "14657:12:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5621,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14669:2:24"
            },
            "returnParameters": {
              "id": 5622,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14688:0:24"
            },
            "scope": 5640,
            "src": "14648:41:24",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "documentation": {
              "id": 5624,
              "nodeType": "StructuredDocumentation",
              "src": "14697:242:24",
              "text": " @dev subclasses should add their custom logic to retire the strategy in this function.\n      Note that we expect all funds (including any pending rewards) to be sent back to\n      the vault in this function."
            },
            "id": 5627,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "_retireStrat",
            "nameLocation": "14954:12:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5625,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14966:2:24"
            },
            "returnParameters": {
              "id": 5626,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14985:0:24"
            },
            "scope": 5640,
            "src": "14945:41:24",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "documentation": {
              "id": 5628,
              "nodeType": "StructuredDocumentation",
              "src": "14994:412:24",
              "text": " @dev subclasses should add their custom logic to withdraw the principal from\n      any external contracts in this function. Note that we don't care about rewards,\n      we just want to reclaim our principal as much as possible, and as quickly as possible.\n      So keep this function lean. Principal should be left in the strategy and not sent to\n      the vault."
            },
            "id": 5631,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "_reclaimWant",
            "nameLocation": "15421:12:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5629,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15433:2:24"
            },
            "returnParameters": {
              "id": 5630,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15452:0:24"
            },
            "scope": 5640,
            "src": "15412:41:24",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "documentation": {
              "id": 5632,
              "nodeType": "StructuredDocumentation",
              "src": "15461:174:24",
              "text": " @dev subclasses should add their custom logic to give allowances to external contracts\n      so the strategy can successfully interface with them."
            },
            "id": 5635,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "_giveAllowances",
            "nameLocation": "15650:15:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5633,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15665:2:24"
            },
            "returnParameters": {
              "id": 5634,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15684:0:24"
            },
            "scope": 5640,
            "src": "15641:44:24",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "documentation": {
              "id": 5636,
              "nodeType": "StructuredDocumentation",
              "src": "15693:132:24",
              "text": " @dev subclasses should add their custom logic to remove all allowances for any external\n      contracts."
            },
            "id": 5639,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "_removeAllowances",
            "nameLocation": "15840:17:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5637,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15857:2:24"
            },
            "returnParameters": {
              "id": 5638,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15876:0:24"
            },
            "scope": 5640,
            "src": "15831:46:24",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 5641,
        "src": "468:15412:24",
        "usedErrors": []
      }
    ],
    "src": "35:15845:24"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-05-19T10:45:50.993Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "averageAPRAcrossLastNHarvests(int256)": {
        "details": "Traverses the harvest log backwards _n items,      and returns the average APR calculated across all the included      log entries. APR is multiplied by PERCENT_DIVISOR to retain precision."
      },
      "balanceOf()": {
        "details": "Function to calculate the total {want} held by the strat.      It takes into account both the funds in hand, plus the funds in external contracts."
      },
      "calculateAPRUsingLogs(uint256,uint256)": {
        "details": "Project an APR using the vault share price change between harvests at the provided indices."
      },
      "clearUpgradeCooldown()": {
        "details": "This function is called:      - in initialize()      - as part of a successful upgrade      - manually by DEFAULT_ADMIN_ROLE to clear the upgrade cooldown."
      },
      "constructor": {
        "custom:oz-upgrades-unsafe-allow": "constructor"
      },
      "deposit()": {
        "details": "Function that puts the funds to work.      It gets called whenever someone deposits in the strategy's vault contract.      Deposits go through only when the strategy is not paused."
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "harvest()": {
        "details": "harvest() function that takes care of logging. Subcontracts should      override _harvestCore() and implement their specific logic in it."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "initiateUpgradeCooldown()": {
        "details": "DEFAULT_ADMIN_ROLE must call this function prior to upgrading the implementation      and wait UPGRADE_TIMELOCK seconds before executing the upgrade."
      },
      "panic()": {
        "details": "Pauses deposits. Withdraws all funds leaving rewards behind"
      },
      "pause()": {
        "details": "Pauses the strat. Deposits become disabled but users can still      withdraw. Removes allowances of external contracts."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "proxiableUUID()": {
        "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate that the this implementation remains valid after an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "retireStrat()": {
        "details": "Function to retire the strategy. Claims all rewards and withdraws      all principal from external contracts, and sends everything back to      the vault. Can only be called by strategist or owner. Note: this is not an emergency withdraw function. For that, see panic()."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "unpause()": {
        "details": "Unpauses the strat. Opens up deposits again and invokes deposit().      Reinstates allowances for external contracts."
      },
      "updateFees(uint256,uint256,uint256)": {
        "details": "updates the call fee, treasury fee, and strategist fee      call Fee + treasury Fee must add up to PERCENT_DIVISOR      strategist fee is expressed as % of the treasury fee and      must be no more than STRATEGIST_MAX_FEE      only owner"
      },
      "updateHarvestLogCadence(uint256)": {
        "details": "Only strategist or owner can edit the log cadence."
      },
      "updateStrategistRemitter(address)": {
        "details": "Updates the current strategistRemitter.      If there is only one strategist this function may be called by      that strategist. However if there are multiple strategists      this function may only be called by the STRATEGIST_MULTISIG role."
      },
      "updateTotalFee(uint256)": {
        "details": "updates the total fee, capped at 5%; only owner."
      },
      "updateTreasury(address)": {
        "details": "only owner can update treasury address."
      },
      "upgradeTo(address)": {
        "details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
      },
      "upgradeToAndCall(address,bytes)": {
        "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
      },
      "withdraw(uint256)": {
        "details": "Withdraws funds and sends them back to the vault. Can only      be called by the vault. _amount must be valid and security fee      is deducted up-front."
      }
    },
    "stateVariables": {
      "totalFee": {
        "details": "Distribution of fees earned, expressed as % of the profit from each harvest. {totalFee} - divided by 10,000 to determine the % fee. Set to 4.5% by default and lowered as necessary to provide users with the most competitive APY. {callFee} - Percent of the totalFee reserved for the harvester (1000 = 10% of total fee: 0.45% by default) {treasuryFee} - Percent of the totalFee taken by maintainers of the software (9000 = 90% of total fee: 4.05% by default) {strategistFee} - Percent of the treasuryFee taken by strategist (2500 = 25% of treasury fee: 1.0125% by default) {securityFee} - Fee taxed when a user withdraws funds. Taken to prevent flash deposit/harvest attacks. These funds are redistributed to stakers in the pool."
      },
      "treasury": {
        "details": "Reaper contracts: {treasury} - Address of the Reaper treasury {vault} - Address of the vault that controls the strategy's funds. {strategistRemitter} - Address where strategist fee is remitted to."
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "TotalFeeUpdated(uint256)": {
        "notice": "{TotalFeeUpdated} Event that is fired each time the total fee is updated. {FeesUpdated} Event that is fired each time callFee+treasuryFee+strategistFee are updated. {StratHarvest} Event that is fired each time the strategy gets harvested. {StrategistRemitterUpdated} Event that is fired each time the strategistRemitter address is updated."
      }
    },
    "kind": "user",
    "methods": {
      "MAX_FEE()": {
        "notice": "Fee related constants: {MAX_FEE} - Maximum fee allowed by the strategy. Hard-capped at 10%. {STRATEGIST_MAX_FEE} - Maximum strategist fee allowed by the strategy (as % of treasury fee).                        Hard-capped at 50% {MAX_SECURITY_FEE} - Maximum security fee charged on withdrawal to prevent                      flash deposit/harvest attacks."
      },
      "STRATEGIST()": {
        "notice": "Reaper Roles"
      }
    },
    "version": 1
  }
}